[package]
name = "node-cli"
version = "0.6.0"
authors = ["Liebi Technologies <bifrost@liebi.com>"]
description = "Bifrost Parachain Node"
build = "build.rs"
default-run = "bifrost"
edition = "2018"

[[bin]]
name = "bifrost"
path = "bin/main.rs"
required-features = ["cli"]

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
# third-party dependencies
codec = { package = "parity-scale-codec", version = "1.3.4" }
serde = { version = "1.0.102", features = ["derive"] }
serde_json = "1.0.52"
futures = { version = "0.3.1", features = ["compat"] }
hex-literal = "0.3.1"
log = "0.4.8"
rand = "0.7.2"
structopt = { version = "0.3.8", optional = true }
tracing = "0.1.22"
parking_lot = "0.10.0"
jsonrpc-core = "15.1.0"

# primitives
sp-authority-discovery = { version = "2.0.0" }
sp-consensus-babe = { version = "0.8.0" }
grandpa-primitives = { version = "2.0.0", package = "sp-finality-grandpa" }
sp-core = { version = "2.0.0" }
sp-runtime = { version = "2.0.0" }
sp-timestamp = { version = "2.0.0", default-features = false }
sp-inherents = { version = "2.0.0" }
sp-keyring = { version = "2.0.0" }
sp-keystore = { version = "0.8.0" }
sp-io = { version = "2.0.0" }
sp-consensus = { version = "0.8.0" }
sp-transaction-pool = { version = "2.0.0" }

# client dependencies
sc-client-api = { version = "2.0.0" }
sc-chain-spec = { version = "2.0.0" }
sc-consensus = { version = "0.8.0" }
sc-transaction-pool = { version = "2.0.0" }
sc-network = { version = "0.8.0" }
sc-consensus-babe = { version = "0.8.0" }
sc-finality-grandpa = { version = "0.8.0" }
sc-finality-grandpa-rpc = { version = "0.8.0" }
sc-client-db = { version = "0.8.0", default-features = false }
sc-offchain = { version = "2.0.0" }
sc-rpc = { version = "2.0.0" }
sc-basic-authorship = { version = "0.8.0" }
sc-service = { version = "0.8.0", default-features = false }
sc-tracing = { version = "2.0.0" }
sc-telemetry = { version = "2.0.0" }
sc-authority-discovery = { version = "0.8.0" }

# frame dependencies
pallet-indices = { version = "2.0.0" }
pallet-timestamp = { version = "2.0.0", default-features = false }
frame-system = { version = "2.0.0" }
pallet-balances = { version = "2.0.0" }
pallet-transaction-payment = { version = "2.0.0" }
frame-support = { version = "2.0.0", default-features = false }
pallet-im-online = { version = "2.0.0", default-features = false }
pallet-authority-discovery = { version = "2.0.0" }
pallet-staking = { version = "2.0.0" }
pallet-grandpa = { version = "2.0.0" }

# node-specific dependencies
node-service = { path = "../service" }
node-primitives = { path = "../primitives" }

# CLI-specific dependencies
sc-cli = { version = "0.8.0", optional = true }
frame-benchmarking-cli = { version = "2.0.0", optional = true }
node-inspect = { version = "0.8.0", optional = true }

# new added after removed local node-rpc, node-primitives
sc-executor = "0.8.0"
sp-api = "2.0.0"
pallet-transaction-payment-rpc = "2.0.0"
substrate-frame-rpc-system = "2.0.0"
sc-consensus-babe-rpc = "0.8.0"
sc-consensus-epochs = "0.8.0"
sp-blockchain = "2.0.0"
sc-rpc-api = "0.8.0"
sc-sync-state-rpc = "0.8.0"
sp-block-builder = "2.0.0"
frame-benchmarking = "2.0.0"

# WASM-specific dependencies
wasm-bindgen = { version = "0.2.57", optional = true }
wasm-bindgen-futures = { version = "0.4.7", optional = true }

# for initialize producer schedule
brml-bridge-eos = { path = "../../../brml/bridge-eos", default-features = false }
brml-bridge-iost = { path = "../../../brml/bridge-iost", default-features = false }
eos-chain = { git = "https://github.com/bifrost-finance/rust-eos" }

# brml rpc crates
brml-assets-rpc = { path = "../../../brml/assets/rpc" }
brml-convert-rpc = { path = "../../../brml/convert/rpc" }
bs58 = { version = "0.3.0", default-features = false, features = ["alloc"] }

# Cumulus dependencies
cumulus-consensus = { git = "https://github.com/paritytech/cumulus", branch = "master" }
cumulus-collator = { git = "https://github.com/paritytech/cumulus", branch = "master" }
cumulus-network = { git = "https://github.com/paritytech/cumulus", branch = "master" }
cumulus-primitives = { git = "https://github.com/paritytech/cumulus", branch = "master" }
cumulus-service = { git = "https://github.com/paritytech/cumulus", branch = "master" }

# Polkadot dependencies
polkadot-primitives = { git = "https://github.com/paritytech/polkadot", branch = "master" }
polkadot-service = { git = "https://github.com/paritytech/polkadot", branch = "master" }
polkadot-cli = { git = "https://github.com/paritytech/polkadot", branch = "master" }
polkadot-test-service = { git = "https://github.com/paritytech/polkadot", branch = "master" }
polkadot-parachain = { git = "https://github.com/paritytech/polkadot", branch = "master" }

[target.'cfg(target_arch="x86_64")'.dependencies]
sc-cli = { version = "0.8.0", optional = true, features = [ "wasmtime" ] }
sc-service = { version = "0.8.0", default-features = false, features = [ "wasmtime" ] }
sp-trie = { version = "2.0.0", default-features = false, features = ["memory-tracker"] }

[dev-dependencies]
sc-keystore = { version = "2.0.0" }
sc-consensus = { version = "0.8.0" }
sc-consensus-babe = { version = "0.8.0", features = ["test-helpers"] }
sc-consensus-epochs = { version = "0.8.0" }
#sc-service-test = { version = "2.0.0" }
futures = "0.3.4"
tempfile = "3.1.0"
assert_cmd = "1.0"
nix = "0.17"
serde_json = "1.0"
regex = "1"
platforms = "0.2.1"

[build-dependencies]
structopt = { version = "0.3.8", optional = true }
node-inspect = { version = "0.8.0", optional = true }
frame-benchmarking-cli = { version = "2.0.0", optional = true }
substrate-build-script-utils = { version = "2.0.0", optional = true }
substrate-frame-cli = { version = "2.0.0", optional = true }

[build-dependencies.sc-cli]
version = "0.8.0"
package = "sc-cli"
optional = true

[features]
default = [ "cli" ]
cli = [
	"node-inspect",
	"sc-cli",
	"frame-benchmarking-cli",
	"substrate-frame-cli",
	"sc-service/db",
	"structopt",
	"substrate-build-script-utils",
]
runtime-benchmarks = [
	"frame-benchmarking-cli",
]
