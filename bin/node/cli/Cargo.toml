[package]
name = "node-cli"
version = "0.3.2"
authors = ["Liebi Technologies <bifrost@liebi.com>"]
description = "Bifrost Parachain Node"
build = "build.rs"
edition = "2018"

[[bin]]
name = "bifrost-node"
path = "bin/main.rs"
required-features = ["cli"]

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
# third-party dependencies
codec = { package = "parity-scale-codec", version = "1.3.1" }
serde = { version = "1.0.106", features = ["derive"] }
serde_json = "1.0.52"
futures = { version = "0.3.1", features = ["compat"] }
hex-literal = "0.2.1"
jsonrpc-core = "14.2.0"
log = "0.4.8"
rand = "0.7.2"
structopt = { version = "0.3.8", optional = true }
tracing = "0.1.10"
parking_lot = "0.10.0"

# primitives
sp-authority-discovery = "2.0.0-rc4"
sp-consensus-babe = { version = "0.8.0-rc4" }
grandpa-primitives = { version = "2.0.0-rc4", package = "sp-finality-grandpa" }
sp-core = "2.0.0-rc4"
sp-runtime = "2.0.0-rc4"
sp-timestamp = { version = "2.0.0-rc4", default-features = false }
sp-finality-tracker = { version = "2.0.0-rc4", default-features = false }
sp-inherents = "2.0.0-rc4"
sp-keyring = "2.0.0-rc4"
sp-io = "2.0.0-rc4"
sp-consensus = "0.8.0-rc4"
sp-transaction-pool = "2.0.0-rc4"

# client dependencies
sc-client-api = "2.0.0-rc4"
sc-chain-spec = "2.0.0-rc4"
sc-consensus = "0.8.0-rc4"
sc-transaction-pool = "2.0.0-rc4"
sc-network = "0.8.0-rc4"
sc-consensus-babe = "0.8.0-rc4"
grandpa = { version = "0.8.0-rc4", package = "sc-finality-grandpa" }
sc-finality-grandpa-rpc = "0.8.0-rc4"
sc-client-db = { version = "0.8.0-rc4", default-features = false }
sc-offchain = "2.0.0-rc4"
sc-rpc = "2.0.0-rc4"
sc-basic-authorship = "0.8.0-rc4"
sc-service = { version = "0.8.0-rc4", default-features = false }
sc-tracing = "2.0.0-rc4"
sc-telemetry = "2.0.0-rc4"
sc-authority-discovery = "0.8.0-rc4"

# frame dependencies
pallet-indices = "2.0.0-rc4"
pallet-timestamp = { version = "2.0.0-rc4", default-features = false }
frame-system = "2.0.0-rc4"
pallet-balances = "2.0.0-rc4"
pallet-transaction-payment = "2.0.0-rc4"
frame-support = { version = "2.0.0-rc4", default-features = false }
pallet-im-online = { version = "2.0.0-rc4", default-features = false }
pallet-authority-discovery = "2.0.0-rc4"
pallet-staking = "2.0.0-rc4"
pallet-grandpa = "2.0.0-rc4"

# node-specific dependencies
node-runtime = { path = "../runtime" }
node-primitives = { path = "../primitives" }

# CLI-specific dependencies
sc-cli = { version = "0.8.0-rc4", optional = true }
node-inspect = { optional = true, path = "../inspect" }

# new added after removed local node-rpc, node-primitives
sc-executor = "0.8.0-rc4"
sp-api = "2.0.0-rc4"
pallet-transaction-payment-rpc = "2.0.0-rc4"
substrate-frame-rpc-system = "2.0.0-rc4"
sc-consensus-babe-rpc = "0.8.0-rc4"
sc-keystore = "2.0.0-rc4"
sc-consensus-epochs = "0.8.0-rc4"
sp-blockchain = "2.0.0-rc4"
sc-rpc-api = "0.8.0-rc4"
sp-block-builder = "2.0.0-rc4"

# WASM-specific dependencies
wasm-bindgen = { version = "0.2.57", optional = true }
wasm-bindgen-futures = { version = "0.4.7", optional = true }
browser-utils = { package = "substrate-browser-utils", optional = true, version = "0.8.0-rc4" }

# for initialize producer schedule
brml-bridge-eos = { path = "../../../brml/bridge-eos", default-features = false }
eos-chain = { git = "https://github.com/bifrost-finance/rust-eos" }

# brml rpc crates
brml-assets-rpc = { path = "../../../brml/assets/rpc" }
brml-convert-rpc = { path = "../../../brml/convert/rpc" }
bs58 = { version = "0.3.0", default-features = false, features = ["alloc"] }

[target.'cfg(target_arch="x86_64")'.dependencies]
sc-cli = { version = "0.8.0-rc4", optional = true, features = [ "wasmtime" ] }
sc-service = { version = "0.8.0-rc4", default-features = false, features = [ "wasmtime" ] }

[build-dependencies]
structopt = { version = "0.3.8", optional = true }
node-inspect = { optional = true, path = "../inspect" }
substrate-build-script-utils = { version = "2.0.0-rc4", optional = true }

[build-dependencies.sc-cli]
version = "0.8.0-rc4"
package = "sc-cli"
optional = true

[features]
default = [ "cli" ]
browser = [
	"browser-utils",
	"wasm-bindgen",
	"wasm-bindgen-futures",
]
cli = [
	"sc-executor/wasmi-errno",
	"node-inspect",
	"sc-cli",
	"sc-service/db",
	"structopt",
	"substrate-build-script-utils",
]
