// This file is part of Bifrost.

// Copyright (C) 2019-2022 Liebi Technologies (UK) Ltd.
// SPDX-License-Identifier: GPL-3.0-or-later WITH Classpath-exception-2.0

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program. If not, see <https://www.gnu.org/licenses/>.
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for bifrost_salp
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-12, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `MacBook-Pro-2`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("bifrost-kusama-local"), DB CACHE: 1024

// Executed Command:
// target/release/bifrost
// benchmark
// pallet
// --chain=bifrost-kusama-local
// --steps=50
// --repeat=20
// --pallet=bifrost_salp
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./pallets/salp/src/weights.rs
// --template=./frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for bifrost_salp.
pub trait WeightInfo {
	fn contribute() -> Weight;
	fn refund() -> Weight;
	fn unlock() -> Weight;
	fn batch_unlock(k: u32, ) -> Weight;
	fn redeem() -> Weight;
	fn set_multisig_confirm_account() -> Weight;
	fn fund_success() -> Weight;
	fn fund_fail() -> Weight;
	fn continue_fund() -> Weight;
	fn fund_retire() -> Weight;
	fn fund_end() -> Weight;
	fn create() -> Weight;
	fn edit() -> Weight;
	fn confirm_contribute() -> Weight;
	fn withdraw() -> Weight;
	fn dissolve_refunded() -> Weight;
	fn dissolve() -> Weight;
	fn buyback() -> Weight;
}

/// Weights for bifrost_salp using the Bifrost node and recommended hardware.
pub struct BifrostWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for BifrostWeight<T> {
	/// Storage: Salp Funds (r:1 w:0)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: XcmInterface XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: XcmInterface XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Salp QueryIdContributionInfo (r:0 w:1)
	/// Proof Skipped: Salp QueryIdContributionInfo (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	/// Storage: unknown `0xd861ea1ebf4800d4b89f4ff787ad79ee96d9a708c85b57da7eb8f9ddeda61291` (r:1 w:1)
	/// Proof Skipped: unknown `0xd861ea1ebf4800d4b89f4ff787ad79ee96d9a708c85b57da7eb8f9ddeda61291` (r:1 w:1)
	fn contribute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2191`
		//  Estimated: `28824`
		// Minimum execution time: 62_000_000 picoseconds.
		Weight::from_parts(63_000_000, 28824)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: Salp FailedFundsToRefund (r:1 w:0)
	/// Proof Skipped: Salp FailedFundsToRefund (max_values: None, max_size: None, mode: Measured)
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: Salp RedeemPool (r:1 w:1)
	/// Proof Skipped: Salp RedeemPool (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:4 w:4)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:2 w:2)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(38), added: 2513, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn refund() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2527`
		//  Estimated: `36029`
		// Minimum execution time: 99_000_000 picoseconds.
		Weight::from_parts(100_000_000, 36029)
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	/// Storage: Salp Funds (r:1 w:0)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: unknown `0xd861ea1ebf4800d4b89f4ff787ad79ee96d9a708c85b57da7eb8f9ddeda61291` (r:1 w:0)
	/// Proof Skipped: unknown `0xd861ea1ebf4800d4b89f4ff787ad79ee96d9a708c85b57da7eb8f9ddeda61291` (r:1 w:0)
	fn unlock() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2019`
		//  Estimated: `18668`
		// Minimum execution time: 44_000_000 picoseconds.
		Weight::from_parts(45_000_000, 18668)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Salp Funds (r:1 w:0)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:10 w:10)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: unknown `0x` (r:1 w:0)
	/// Proof Skipped: unknown `0x` (r:1 w:0)
	/// Storage: unknown `0xb2233113701bdbed1e43339a304e77ade52c7b0204a5366dba4c12c9c1a90811` (r:1 w:0)
	/// Proof Skipped: unknown `0xb2233113701bdbed1e43339a304e77ade52c7b0204a5366dba4c12c9c1a90811` (r:1 w:0)
	/// Storage: unknown `0xbcf11cdfc92c4bf5c40d1adc80e83b0c91148a8079347419a0890363e3e0186c` (r:1 w:0)
	/// Proof Skipped: unknown `0xbcf11cdfc92c4bf5c40d1adc80e83b0c91148a8079347419a0890363e3e0186c` (r:1 w:0)
	/// Storage: unknown `0xbfb77688785d1f34aaea15726de0f743afd4cd1eb8a9b2f03ec8f6cfcd2c1a8a` (r:1 w:0)
	/// Proof Skipped: unknown `0xbfb77688785d1f34aaea15726de0f743afd4cd1eb8a9b2f03ec8f6cfcd2c1a8a` (r:1 w:0)
	/// Storage: unknown `0xc85982571aa615c788ef9b2c16f54f25773fd439e8ee1ed2aa3ae43d48e880f0` (r:1 w:0)
	/// Proof Skipped: unknown `0xc85982571aa615c788ef9b2c16f54f25773fd439e8ee1ed2aa3ae43d48e880f0` (r:1 w:0)
	/// Storage: unknown `0xecc728efb63d13c538d0122cd7dba2964c47c6750030158f57908845b086ca70` (r:1 w:0)
	/// Proof Skipped: unknown `0xecc728efb63d13c538d0122cd7dba2964c47c6750030158f57908845b086ca70` (r:1 w:0)
	/// The range of component `k` is `[1, 5]`.
	fn batch_unlock(k: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1546 + k * (339 ±0)`
		//  Estimated: `7723336068740308509 + k * (7546 ±0)`
		// Minimum execution time: 47_000_000 picoseconds.
		Weight::from_parts(26_145_735, 7723336068740308509)
			// Standard Error: 27_608
			.saturating_add(Weight::from_parts(22_024_707, 0).saturating_mul(k.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(k.into())))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(k.into())))
			.saturating_add(Weight::from_parts(0, 7546).saturating_mul(k.into()))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: Salp RedeemPool (r:1 w:1)
	/// Proof Skipped: Salp RedeemPool (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:4 w:4)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:2 w:2)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(38), added: 2513, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn redeem() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2508`
		//  Estimated: `30970`
		// Minimum execution time: 94_000_000 picoseconds.
		Weight::from_parts(96_000_000, 30970)
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	/// Storage: Salp MultisigConfirmAccount (r:0 w:1)
	/// Proof Skipped: Salp MultisigConfirmAccount (max_values: Some(1), max_size: None, mode: Measured)
	fn set_multisig_confirm_account() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 2_000_000 picoseconds.
		Weight::from_parts(2_000_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	fn fund_success() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `357`
		//  Estimated: `2832`
		// Minimum execution time: 13_000_000 picoseconds.
		Weight::from_parts(13_000_000, 2832)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	fn fund_fail() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `357`
		//  Estimated: `2832`
		// Minimum execution time: 13_000_000 picoseconds.
		Weight::from_parts(13_000_000, 2832)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: AssetRegistry CurrencyMetadatas (r:2 w:1)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: Salp FailedFundsToRefund (r:0 w:1)
	/// Proof Skipped: Salp FailedFundsToRefund (max_values: None, max_size: None, mode: Measured)
	fn continue_fund() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1077`
		//  Estimated: `10656`
		// Minimum execution time: 32_000_000 picoseconds.
		Weight::from_parts(33_000_000, 10656)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	fn fund_retire() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `357`
		//  Estimated: `2832`
		// Minimum execution time: 13_000_000 picoseconds.
		Weight::from_parts(13_000_000, 2832)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	fn fund_end() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `390`
		//  Estimated: `2865`
		// Minimum execution time: 12_000_000 picoseconds.
		Weight::from_parts(13_000_000, 2865)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: Salp CurrentTrieIndex (r:1 w:1)
	/// Proof Skipped: Salp CurrentTrieIndex (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: AssetRegistry CurrencyMetadatas (r:2 w:1)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	fn create() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `891`
		//  Estimated: `10593`
		// Minimum execution time: 28_000_000 picoseconds.
		Weight::from_parts(28_000_000, 10593)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	fn edit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `324`
		//  Estimated: `2799`
		// Minimum execution time: 12_000_000 picoseconds.
		Weight::from_parts(12_000_000, 2799)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Salp MultisigConfirmAccount (r:1 w:0)
	/// Proof Skipped: Salp MultisigConfirmAccount (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:4 w:4)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:2 w:2)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(38), added: 2513, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: unknown `0xd861ea1ebf4800d4b89f4ff787ad79ee96d9a708c85b57da7eb8f9ddeda61291` (r:1 w:1)
	/// Proof Skipped: unknown `0xd861ea1ebf4800d4b89f4ff787ad79ee96d9a708c85b57da7eb8f9ddeda61291` (r:1 w:1)
	fn confirm_contribute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2608`
		//  Estimated: `36353`
		// Minimum execution time: 101_000_000 picoseconds.
		Weight::from_parts(102_000_000, 36353)
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: Salp RedeemPool (r:1 w:1)
	/// Proof Skipped: Salp RedeemPool (max_values: Some(1), max_size: None, mode: Measured)
	fn withdraw() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `357`
		//  Estimated: `3684`
		// Minimum execution time: 15_000_000 picoseconds.
		Weight::from_parts(15_000_000, 3684)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Salp FailedFundsToRefund (r:1 w:1)
	/// Proof Skipped: Salp FailedFundsToRefund (max_values: None, max_size: None, mode: Measured)
	fn dissolve_refunded() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `467`
		//  Estimated: `2942`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(17_000_000, 2942)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:3 w:3)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:3 w:3)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: unknown `0x` (r:1 w:0)
	/// Proof Skipped: unknown `0x` (r:1 w:0)
	/// Storage: unknown `0xd861ea1ebf4800d4b89f4ff787ad79ee96d9a708c85b57da7eb8f9ddeda61291` (r:1 w:1)
	/// Proof Skipped: unknown `0xd861ea1ebf4800d4b89f4ff787ad79ee96d9a708c85b57da7eb8f9ddeda61291` (r:1 w:1)
	fn dissolve() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2153`
		//  Estimated: `34100`
		// Minimum execution time: 93_000_000 picoseconds.
		Weight::from_parts(95_000_000, 34100)
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn buyback() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `103`
		//  Estimated: `499`
		// Minimum execution time: 10_000_000 picoseconds.
		Weight::from_parts(10_000_000, 499)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: Salp Funds (r:1 w:0)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: XcmInterface XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: XcmInterface XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Salp QueryIdContributionInfo (r:0 w:1)
	/// Proof Skipped: Salp QueryIdContributionInfo (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	/// Storage: unknown `0xd861ea1ebf4800d4b89f4ff787ad79ee96d9a708c85b57da7eb8f9ddeda61291` (r:1 w:1)
	/// Proof Skipped: unknown `0xd861ea1ebf4800d4b89f4ff787ad79ee96d9a708c85b57da7eb8f9ddeda61291` (r:1 w:1)
	fn contribute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2191`
		//  Estimated: `28824`
		// Minimum execution time: 62_000_000 picoseconds.
		Weight::from_parts(63_000_000, 28824)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: Salp FailedFundsToRefund (r:1 w:0)
	/// Proof Skipped: Salp FailedFundsToRefund (max_values: None, max_size: None, mode: Measured)
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: Salp RedeemPool (r:1 w:1)
	/// Proof Skipped: Salp RedeemPool (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:4 w:4)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:2 w:2)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(38), added: 2513, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn refund() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2527`
		//  Estimated: `36029`
		// Minimum execution time: 99_000_000 picoseconds.
		Weight::from_parts(100_000_000, 36029)
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().writes(9_u64))
	}
	/// Storage: Salp Funds (r:1 w:0)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: unknown `0xd861ea1ebf4800d4b89f4ff787ad79ee96d9a708c85b57da7eb8f9ddeda61291` (r:1 w:0)
	/// Proof Skipped: unknown `0xd861ea1ebf4800d4b89f4ff787ad79ee96d9a708c85b57da7eb8f9ddeda61291` (r:1 w:0)
	fn unlock() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2019`
		//  Estimated: `18668`
		// Minimum execution time: 44_000_000 picoseconds.
		Weight::from_parts(45_000_000, 18668)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Salp Funds (r:1 w:0)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:10 w:10)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: unknown `0x` (r:1 w:0)
	/// Proof Skipped: unknown `0x` (r:1 w:0)
	/// Storage: unknown `0xb2233113701bdbed1e43339a304e77ade52c7b0204a5366dba4c12c9c1a90811` (r:1 w:0)
	/// Proof Skipped: unknown `0xb2233113701bdbed1e43339a304e77ade52c7b0204a5366dba4c12c9c1a90811` (r:1 w:0)
	/// Storage: unknown `0xbcf11cdfc92c4bf5c40d1adc80e83b0c91148a8079347419a0890363e3e0186c` (r:1 w:0)
	/// Proof Skipped: unknown `0xbcf11cdfc92c4bf5c40d1adc80e83b0c91148a8079347419a0890363e3e0186c` (r:1 w:0)
	/// Storage: unknown `0xbfb77688785d1f34aaea15726de0f743afd4cd1eb8a9b2f03ec8f6cfcd2c1a8a` (r:1 w:0)
	/// Proof Skipped: unknown `0xbfb77688785d1f34aaea15726de0f743afd4cd1eb8a9b2f03ec8f6cfcd2c1a8a` (r:1 w:0)
	/// Storage: unknown `0xc85982571aa615c788ef9b2c16f54f25773fd439e8ee1ed2aa3ae43d48e880f0` (r:1 w:0)
	/// Proof Skipped: unknown `0xc85982571aa615c788ef9b2c16f54f25773fd439e8ee1ed2aa3ae43d48e880f0` (r:1 w:0)
	/// Storage: unknown `0xecc728efb63d13c538d0122cd7dba2964c47c6750030158f57908845b086ca70` (r:1 w:0)
	/// Proof Skipped: unknown `0xecc728efb63d13c538d0122cd7dba2964c47c6750030158f57908845b086ca70` (r:1 w:0)
	/// The range of component `k` is `[1, 5]`.
	fn batch_unlock(k: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1546 + k * (339 ±0)`
		//  Estimated: `7723336068740308509 + k * (7546 ±0)`
		// Minimum execution time: 47_000_000 picoseconds.
		Weight::from_parts(26_145_735, 7723336068740308509)
			// Standard Error: 27_608
			.saturating_add(Weight::from_parts(22_024_707, 0).saturating_mul(k.into()))
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().reads((3_u64).saturating_mul(k.into())))
			.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(k.into())))
			.saturating_add(Weight::from_parts(0, 7546).saturating_mul(k.into()))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: Salp RedeemPool (r:1 w:1)
	/// Proof Skipped: Salp RedeemPool (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:4 w:4)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:2 w:2)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(38), added: 2513, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn redeem() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2508`
		//  Estimated: `30970`
		// Minimum execution time: 94_000_000 picoseconds.
		Weight::from_parts(96_000_000, 30970)
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().writes(9_u64))
	}
	/// Storage: Salp MultisigConfirmAccount (r:0 w:1)
	/// Proof Skipped: Salp MultisigConfirmAccount (max_values: Some(1), max_size: None, mode: Measured)
	fn set_multisig_confirm_account() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 2_000_000 picoseconds.
		Weight::from_parts(2_000_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	fn fund_success() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `357`
		//  Estimated: `2832`
		// Minimum execution time: 13_000_000 picoseconds.
		Weight::from_parts(13_000_000, 2832)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	fn fund_fail() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `357`
		//  Estimated: `2832`
		// Minimum execution time: 13_000_000 picoseconds.
		Weight::from_parts(13_000_000, 2832)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: AssetRegistry CurrencyMetadatas (r:2 w:1)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: Salp FailedFundsToRefund (r:0 w:1)
	/// Proof Skipped: Salp FailedFundsToRefund (max_values: None, max_size: None, mode: Measured)
	fn continue_fund() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1077`
		//  Estimated: `10656`
		// Minimum execution time: 32_000_000 picoseconds.
		Weight::from_parts(33_000_000, 10656)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	fn fund_retire() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `357`
		//  Estimated: `2832`
		// Minimum execution time: 13_000_000 picoseconds.
		Weight::from_parts(13_000_000, 2832)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	fn fund_end() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `390`
		//  Estimated: `2865`
		// Minimum execution time: 12_000_000 picoseconds.
		Weight::from_parts(13_000_000, 2865)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: Salp CurrentTrieIndex (r:1 w:1)
	/// Proof Skipped: Salp CurrentTrieIndex (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: AssetRegistry CurrencyMetadatas (r:2 w:1)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	fn create() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `891`
		//  Estimated: `10593`
		// Minimum execution time: 28_000_000 picoseconds.
		Weight::from_parts(28_000_000, 10593)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	fn edit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `324`
		//  Estimated: `2799`
		// Minimum execution time: 12_000_000 picoseconds.
		Weight::from_parts(12_000_000, 2799)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Salp MultisigConfirmAccount (r:1 w:0)
	/// Proof Skipped: Salp MultisigConfirmAccount (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:4 w:4)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:2 w:2)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(38), added: 2513, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: unknown `0xd861ea1ebf4800d4b89f4ff787ad79ee96d9a708c85b57da7eb8f9ddeda61291` (r:1 w:1)
	/// Proof Skipped: unknown `0xd861ea1ebf4800d4b89f4ff787ad79ee96d9a708c85b57da7eb8f9ddeda61291` (r:1 w:1)
	fn confirm_contribute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2608`
		//  Estimated: `36353`
		// Minimum execution time: 101_000_000 picoseconds.
		Weight::from_parts(102_000_000, 36353)
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().writes(9_u64))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: Salp RedeemPool (r:1 w:1)
	/// Proof Skipped: Salp RedeemPool (max_values: Some(1), max_size: None, mode: Measured)
	fn withdraw() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `357`
		//  Estimated: `3684`
		// Minimum execution time: 15_000_000 picoseconds.
		Weight::from_parts(15_000_000, 3684)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Salp FailedFundsToRefund (r:1 w:1)
	/// Proof Skipped: Salp FailedFundsToRefund (max_values: None, max_size: None, mode: Measured)
	fn dissolve_refunded() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `467`
		//  Estimated: `2942`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(17_000_000, 2942)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Salp Funds (r:1 w:1)
	/// Proof Skipped: Salp Funds (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:3 w:3)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:3 w:3)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: unknown `0x` (r:1 w:0)
	/// Proof Skipped: unknown `0x` (r:1 w:0)
	/// Storage: unknown `0xd861ea1ebf4800d4b89f4ff787ad79ee96d9a708c85b57da7eb8f9ddeda61291` (r:1 w:1)
	/// Proof Skipped: unknown `0xd861ea1ebf4800d4b89f4ff787ad79ee96d9a708c85b57da7eb8f9ddeda61291` (r:1 w:1)
	fn dissolve() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2153`
		//  Estimated: `34100`
		// Minimum execution time: 93_000_000 picoseconds.
		Weight::from_parts(95_000_000, 34100)
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn buyback() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `103`
		//  Estimated: `499`
		// Minimum execution time: 10_000_000 picoseconds.
		Weight::from_parts(10_000_000, 499)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
}
