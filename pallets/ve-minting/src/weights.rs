// This file is part of Bifrost.

// Copyright (C) 2019-2022 Liebi Technologies (UK) Ltd.
// SPDX-License-Identifier: GPL-3.0-or-later WITH Classpath-exception-2.0

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program. If not, see <https://www.gnu.org/licenses/>.
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for bifrost_ve_minting
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-05-21, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `VM-16-3-ubuntu`, CPU: `Intel(R) Xeon(R) Platinum 8374C CPU @ 2.70GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("bifrost-polkadot-local"), DB CACHE: 1024

// Executed Command:
// ./target/release/bifrost
// benchmark
// pallet
// --chain=bifrost-polkadot-local
// --steps=50
// --repeat=20
// --pallet=bifrost_ve_minting
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --header=./HEADER-GPL3
// --output=./weight.rs
// --template
// ./frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for bifrost_ve_minting.
pub trait WeightInfo {
	fn set_config() -> Weight;
	fn create_lock() -> Weight;
	fn increase_amount() -> Weight;
	fn increase_unlock_time() -> Weight;
	fn withdraw() -> Weight;
	fn get_rewards() -> Weight;
	fn notify_rewards() -> Weight;
}

/// Weights for bifrost_ve_minting using the Bifrost node and recommended hardware.
pub struct BifrostWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for BifrostWeight<T> {
	/// Storage: VeMinting VeConfigs (r:1 w:1)
	/// Proof Skipped: VeMinting VeConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: System Number (r:1 w:0)
	/// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System ExecutionPhase (r:1 w:0)
	/// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	/// Storage: System EventCount (r:1 w:1)
	/// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System Events (r:1 w:1)
	/// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	fn set_config() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `200`
		//  Estimated: `2888`
		// Minimum execution time: 17_800_000 picoseconds.
		Weight::from_parts(18_350_000, 2888)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: VeMinting VeConfigs (r:1 w:0)
	/// Proof Skipped: VeMinting VeConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting Locked (r:1 w:1)
	/// Proof Skipped: VeMinting Locked (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Number (r:1 w:0)
	/// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VeMinting Supply (r:1 w:1)
	/// Proof Skipped: VeMinting Supply (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:2 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: System ExecutionPhase (r:1 w:0)
	/// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	/// Storage: System EventCount (r:1 w:1)
	/// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System Events (r:1 w:1)
	/// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting IncentiveConfigs (r:1 w:1)
	/// Proof Skipped: VeMinting IncentiveConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting Epoch (r:1 w:1)
	/// Proof Skipped: VeMinting Epoch (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting PointHistory (r:1 w:1)
	/// Proof Skipped: VeMinting PointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointEpoch (r:1 w:1)
	/// Proof Skipped: VeMinting UserPointEpoch (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting Rewards (r:1 w:0)
	/// Proof Skipped: VeMinting Rewards (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting SlopeChanges (r:2 w:1)
	/// Proof Skipped: VeMinting SlopeChanges (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointHistory (r:0 w:1)
	/// Proof Skipped: VeMinting UserPointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserRewardPerTokenPaid (r:0 w:1)
	/// Proof Skipped: VeMinting UserRewardPerTokenPaid (max_values: None, max_size: None, mode: Measured)
	fn create_lock() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1598`
		//  Estimated: `52464`
		// Minimum execution time: 149_072_000 picoseconds.
		Weight::from_parts(151_502_000, 52464)
			.saturating_add(T::DbWeight::get().reads(19_u64))
			.saturating_add(T::DbWeight::get().writes(14_u64))
	}
	/// Storage: VeMinting VeConfigs (r:1 w:0)
	/// Proof Skipped: VeMinting VeConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting Locked (r:1 w:1)
	/// Proof Skipped: VeMinting Locked (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Number (r:1 w:0)
	/// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VeMinting Supply (r:1 w:1)
	/// Proof Skipped: VeMinting Supply (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: System ExecutionPhase (r:1 w:0)
	/// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	/// Storage: System EventCount (r:1 w:1)
	/// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System Events (r:1 w:1)
	/// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting IncentiveConfigs (r:1 w:1)
	/// Proof Skipped: VeMinting IncentiveConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting Epoch (r:1 w:1)
	/// Proof Skipped: VeMinting Epoch (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting PointHistory (r:1 w:1)
	/// Proof Skipped: VeMinting PointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointEpoch (r:1 w:1)
	/// Proof Skipped: VeMinting UserPointEpoch (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointHistory (r:1 w:1)
	/// Proof Skipped: VeMinting UserPointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting Rewards (r:1 w:1)
	/// Proof Skipped: VeMinting Rewards (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserRewardPerTokenPaid (r:1 w:1)
	/// Proof Skipped: VeMinting UserRewardPerTokenPaid (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting SlopeChanges (r:1 w:1)
	/// Proof Skipped: VeMinting SlopeChanges (max_values: None, max_size: None, mode: Measured)
	fn increase_amount() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2304`
		//  Estimated: `61514`
		// Minimum execution time: 167_579_000 picoseconds.
		Weight::from_parts(171_783_000, 61514)
			.saturating_add(T::DbWeight::get().reads(19_u64))
			.saturating_add(T::DbWeight::get().writes(14_u64))
	}
	/// Storage: VeMinting VeConfigs (r:1 w:0)
	/// Proof Skipped: VeMinting VeConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting Locked (r:1 w:1)
	/// Proof Skipped: VeMinting Locked (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Number (r:1 w:0)
	/// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VeMinting Supply (r:1 w:1)
	/// Proof Skipped: VeMinting Supply (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting IncentiveConfigs (r:1 w:1)
	/// Proof Skipped: VeMinting IncentiveConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting Epoch (r:1 w:1)
	/// Proof Skipped: VeMinting Epoch (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting PointHistory (r:1 w:1)
	/// Proof Skipped: VeMinting PointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointEpoch (r:1 w:1)
	/// Proof Skipped: VeMinting UserPointEpoch (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointHistory (r:1 w:1)
	/// Proof Skipped: VeMinting UserPointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting Rewards (r:1 w:1)
	/// Proof Skipped: VeMinting Rewards (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserRewardPerTokenPaid (r:1 w:1)
	/// Proof Skipped: VeMinting UserRewardPerTokenPaid (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting SlopeChanges (r:2 w:2)
	/// Proof Skipped: VeMinting SlopeChanges (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:1 w:0)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: System ExecutionPhase (r:1 w:0)
	/// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	/// Storage: System EventCount (r:1 w:1)
	/// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System Events (r:1 w:1)
	/// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	fn increase_unlock_time() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1715`
		//  Estimated: `46946`
		// Minimum execution time: 133_120_000 picoseconds.
		Weight::from_parts(136_819_000, 46946)
			.saturating_add(T::DbWeight::get().reads(17_u64))
			.saturating_add(T::DbWeight::get().writes(13_u64))
	}
	/// Storage: VeMinting Locked (r:1 w:1)
	/// Proof Skipped: VeMinting Locked (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Number (r:1 w:0)
	/// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VeMinting Supply (r:1 w:1)
	/// Proof Skipped: VeMinting Supply (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: System ExecutionPhase (r:1 w:0)
	/// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	/// Storage: System EventCount (r:1 w:1)
	/// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System Events (r:1 w:1)
	/// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting IncentiveConfigs (r:1 w:1)
	/// Proof Skipped: VeMinting IncentiveConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting Epoch (r:1 w:1)
	/// Proof Skipped: VeMinting Epoch (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting PointHistory (r:1 w:105)
	/// Proof Skipped: VeMinting PointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting SlopeChanges (r:104 w:0)
	/// Proof Skipped: VeMinting SlopeChanges (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointEpoch (r:1 w:1)
	/// Proof Skipped: VeMinting UserPointEpoch (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointHistory (r:1 w:1)
	/// Proof Skipped: VeMinting UserPointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting Rewards (r:1 w:1)
	/// Proof Skipped: VeMinting Rewards (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserRewardPerTokenPaid (r:1 w:1)
	/// Proof Skipped: VeMinting UserRewardPerTokenPaid (max_values: None, max_size: None, mode: Measured)
	fn withdraw() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2249`
		//  Estimated: `312980`
		// Minimum execution time: 772_471_000 picoseconds.
		Weight::from_parts(789_662_000, 312980)
			.saturating_add(T::DbWeight::get().reads(121_u64))
			.saturating_add(T::DbWeight::get().writes(118_u64))
	}
	/// Storage: VeMinting IncentiveConfigs (r:1 w:1)
	/// Proof Skipped: VeMinting IncentiveConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: System Number (r:1 w:0)
	/// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VeMinting Epoch (r:1 w:0)
	/// Proof Skipped: VeMinting Epoch (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting PointHistory (r:1 w:0)
	/// Proof Skipped: VeMinting PointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting SlopeChanges (r:104 w:0)
	/// Proof Skipped: VeMinting SlopeChanges (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointEpoch (r:1 w:0)
	/// Proof Skipped: VeMinting UserPointEpoch (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointHistory (r:1 w:0)
	/// Proof Skipped: VeMinting UserPointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting Rewards (r:1 w:1)
	/// Proof Skipped: VeMinting Rewards (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserRewardPerTokenPaid (r:1 w:1)
	/// Proof Skipped: VeMinting UserRewardPerTokenPaid (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:3 w:3)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: System ExecutionPhase (r:1 w:0)
	/// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	/// Storage: System EventCount (r:1 w:1)
	/// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System Events (r:1 w:1)
	/// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	fn get_rewards() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1465`
		//  Estimated: `293752`
		// Minimum execution time: 419_571_000 picoseconds.
		Weight::from_parts(428_778_000, 293752)
			.saturating_add(T::DbWeight::get().reads(118_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: VeMinting IncentiveConfigs (r:1 w:1)
	/// Proof Skipped: VeMinting IncentiveConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: System Number (r:1 w:0)
	/// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System ExecutionPhase (r:1 w:0)
	/// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	/// Storage: System EventCount (r:1 w:1)
	/// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System Events (r:1 w:1)
	/// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting Epoch (r:1 w:0)
	/// Proof Skipped: VeMinting Epoch (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting PointHistory (r:1 w:0)
	/// Proof Skipped: VeMinting PointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn notify_rewards() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `462`
		//  Estimated: `12512`
		// Minimum execution time: 77_216_000 picoseconds.
		Weight::from_parts(79_042_000, 12512)
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: VeMinting VeConfigs (r:1 w:1)
	/// Proof Skipped: VeMinting VeConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: System Number (r:1 w:0)
	/// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System ExecutionPhase (r:1 w:0)
	/// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	/// Storage: System EventCount (r:1 w:1)
	/// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System Events (r:1 w:1)
	/// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	fn set_config() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `200`
		//  Estimated: `2888`
		// Minimum execution time: 17_800_000 picoseconds.
		Weight::from_parts(18_350_000, 2888)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: VeMinting VeConfigs (r:1 w:0)
	/// Proof Skipped: VeMinting VeConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting Locked (r:1 w:1)
	/// Proof Skipped: VeMinting Locked (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Number (r:1 w:0)
	/// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VeMinting Supply (r:1 w:1)
	/// Proof Skipped: VeMinting Supply (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:2 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: System ExecutionPhase (r:1 w:0)
	/// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	/// Storage: System EventCount (r:1 w:1)
	/// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System Events (r:1 w:1)
	/// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting IncentiveConfigs (r:1 w:1)
	/// Proof Skipped: VeMinting IncentiveConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting Epoch (r:1 w:1)
	/// Proof Skipped: VeMinting Epoch (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting PointHistory (r:1 w:1)
	/// Proof Skipped: VeMinting PointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointEpoch (r:1 w:1)
	/// Proof Skipped: VeMinting UserPointEpoch (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting Rewards (r:1 w:0)
	/// Proof Skipped: VeMinting Rewards (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting SlopeChanges (r:2 w:1)
	/// Proof Skipped: VeMinting SlopeChanges (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointHistory (r:0 w:1)
	/// Proof Skipped: VeMinting UserPointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserRewardPerTokenPaid (r:0 w:1)
	/// Proof Skipped: VeMinting UserRewardPerTokenPaid (max_values: None, max_size: None, mode: Measured)
	fn create_lock() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1598`
		//  Estimated: `52464`
		// Minimum execution time: 149_072_000 picoseconds.
		Weight::from_parts(151_502_000, 52464)
			.saturating_add(RocksDbWeight::get().reads(19_u64))
			.saturating_add(RocksDbWeight::get().writes(14_u64))
	}
	/// Storage: VeMinting VeConfigs (r:1 w:0)
	/// Proof Skipped: VeMinting VeConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting Locked (r:1 w:1)
	/// Proof Skipped: VeMinting Locked (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Number (r:1 w:0)
	/// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VeMinting Supply (r:1 w:1)
	/// Proof Skipped: VeMinting Supply (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: System ExecutionPhase (r:1 w:0)
	/// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	/// Storage: System EventCount (r:1 w:1)
	/// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System Events (r:1 w:1)
	/// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting IncentiveConfigs (r:1 w:1)
	/// Proof Skipped: VeMinting IncentiveConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting Epoch (r:1 w:1)
	/// Proof Skipped: VeMinting Epoch (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting PointHistory (r:1 w:1)
	/// Proof Skipped: VeMinting PointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointEpoch (r:1 w:1)
	/// Proof Skipped: VeMinting UserPointEpoch (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointHistory (r:1 w:1)
	/// Proof Skipped: VeMinting UserPointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting Rewards (r:1 w:1)
	/// Proof Skipped: VeMinting Rewards (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserRewardPerTokenPaid (r:1 w:1)
	/// Proof Skipped: VeMinting UserRewardPerTokenPaid (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting SlopeChanges (r:1 w:1)
	/// Proof Skipped: VeMinting SlopeChanges (max_values: None, max_size: None, mode: Measured)
	fn increase_amount() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2304`
		//  Estimated: `61514`
		// Minimum execution time: 167_579_000 picoseconds.
		Weight::from_parts(171_783_000, 61514)
			.saturating_add(RocksDbWeight::get().reads(19_u64))
			.saturating_add(RocksDbWeight::get().writes(14_u64))
	}
	/// Storage: VeMinting VeConfigs (r:1 w:0)
	/// Proof Skipped: VeMinting VeConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting Locked (r:1 w:1)
	/// Proof Skipped: VeMinting Locked (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Number (r:1 w:0)
	/// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VeMinting Supply (r:1 w:1)
	/// Proof Skipped: VeMinting Supply (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting IncentiveConfigs (r:1 w:1)
	/// Proof Skipped: VeMinting IncentiveConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting Epoch (r:1 w:1)
	/// Proof Skipped: VeMinting Epoch (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting PointHistory (r:1 w:1)
	/// Proof Skipped: VeMinting PointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointEpoch (r:1 w:1)
	/// Proof Skipped: VeMinting UserPointEpoch (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointHistory (r:1 w:1)
	/// Proof Skipped: VeMinting UserPointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting Rewards (r:1 w:1)
	/// Proof Skipped: VeMinting Rewards (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserRewardPerTokenPaid (r:1 w:1)
	/// Proof Skipped: VeMinting UserRewardPerTokenPaid (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting SlopeChanges (r:2 w:2)
	/// Proof Skipped: VeMinting SlopeChanges (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:1 w:0)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: System ExecutionPhase (r:1 w:0)
	/// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	/// Storage: System EventCount (r:1 w:1)
	/// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System Events (r:1 w:1)
	/// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	fn increase_unlock_time() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1715`
		//  Estimated: `46946`
		// Minimum execution time: 133_120_000 picoseconds.
		Weight::from_parts(136_819_000, 46946)
			.saturating_add(RocksDbWeight::get().reads(17_u64))
			.saturating_add(RocksDbWeight::get().writes(13_u64))
	}
	/// Storage: VeMinting Locked (r:1 w:1)
	/// Proof Skipped: VeMinting Locked (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Number (r:1 w:0)
	/// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VeMinting Supply (r:1 w:1)
	/// Proof Skipped: VeMinting Supply (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	/// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: System ExecutionPhase (r:1 w:0)
	/// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	/// Storage: System EventCount (r:1 w:1)
	/// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System Events (r:1 w:1)
	/// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting IncentiveConfigs (r:1 w:1)
	/// Proof Skipped: VeMinting IncentiveConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting Epoch (r:1 w:1)
	/// Proof Skipped: VeMinting Epoch (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting PointHistory (r:1 w:105)
	/// Proof Skipped: VeMinting PointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting SlopeChanges (r:104 w:0)
	/// Proof Skipped: VeMinting SlopeChanges (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointEpoch (r:1 w:1)
	/// Proof Skipped: VeMinting UserPointEpoch (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointHistory (r:1 w:1)
	/// Proof Skipped: VeMinting UserPointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting Rewards (r:1 w:1)
	/// Proof Skipped: VeMinting Rewards (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserRewardPerTokenPaid (r:1 w:1)
	/// Proof Skipped: VeMinting UserRewardPerTokenPaid (max_values: None, max_size: None, mode: Measured)
	fn withdraw() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2249`
		//  Estimated: `312980`
		// Minimum execution time: 772_471_000 picoseconds.
		Weight::from_parts(789_662_000, 312980)
			.saturating_add(RocksDbWeight::get().reads(121_u64))
			.saturating_add(RocksDbWeight::get().writes(118_u64))
	}
	/// Storage: VeMinting IncentiveConfigs (r:1 w:1)
	/// Proof Skipped: VeMinting IncentiveConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: System Number (r:1 w:0)
	/// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VeMinting Epoch (r:1 w:0)
	/// Proof Skipped: VeMinting Epoch (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting PointHistory (r:1 w:0)
	/// Proof Skipped: VeMinting PointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting SlopeChanges (r:104 w:0)
	/// Proof Skipped: VeMinting SlopeChanges (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointEpoch (r:1 w:0)
	/// Proof Skipped: VeMinting UserPointEpoch (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserPointHistory (r:1 w:0)
	/// Proof Skipped: VeMinting UserPointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting Rewards (r:1 w:1)
	/// Proof Skipped: VeMinting Rewards (max_values: None, max_size: None, mode: Measured)
	/// Storage: VeMinting UserRewardPerTokenPaid (r:1 w:1)
	/// Proof Skipped: VeMinting UserRewardPerTokenPaid (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:3 w:3)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: System ExecutionPhase (r:1 w:0)
	/// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	/// Storage: System EventCount (r:1 w:1)
	/// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System Events (r:1 w:1)
	/// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	fn get_rewards() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1465`
		//  Estimated: `293752`
		// Minimum execution time: 419_571_000 picoseconds.
		Weight::from_parts(428_778_000, 293752)
			.saturating_add(RocksDbWeight::get().reads(118_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: VeMinting IncentiveConfigs (r:1 w:1)
	/// Proof Skipped: VeMinting IncentiveConfigs (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: System Number (r:1 w:0)
	/// Proof: System Number (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System ExecutionPhase (r:1 w:0)
	/// Proof: System ExecutionPhase (max_values: Some(1), max_size: Some(5), added: 500, mode: MaxEncodedLen)
	/// Storage: System EventCount (r:1 w:1)
	/// Proof: System EventCount (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: System Events (r:1 w:1)
	/// Proof Skipped: System Events (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting Epoch (r:1 w:0)
	/// Proof Skipped: VeMinting Epoch (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: VeMinting PointHistory (r:1 w:0)
	/// Proof Skipped: VeMinting PointHistory (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn notify_rewards() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `462`
		//  Estimated: `12512`
		// Minimum execution time: 77_216_000 picoseconds.
		Weight::from_parts(79_042_000, 12512)
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
}
