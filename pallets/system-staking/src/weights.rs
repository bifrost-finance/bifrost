
//! Autogenerated weights for bifrost_system_staking
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-05-18, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `VM-16-3-ubuntu`, CPU: `Intel(R) Xeon(R) Platinum 8374C CPU @ 2.70GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("bifrost-kusama-local"), DB CACHE: 1024

// Executed Command:
// target/release/bifrost
// benchmark
// pallet
// --chain=bifrost-kusama-local
// --steps=50
// --repeat=20
// --pallet=bifrost_system_staking
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./runtime/bifrost-kusama/src/weights/bifrost_system_staking.rs
// --template=./frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for bifrost_system_staking.
pub trait WeightInfo {
	fn on_initialize() -> Weight;
	fn token_config() -> Weight;
	fn refresh_token_info() -> Weight;
	fn payout() -> Weight;
	fn on_redeem_success() -> Weight;
	fn on_redeemed() -> Weight;
	fn delete_token() -> Weight;
}

/// Weights for bifrost_system_staking using the Substrate node and recommended hardware.
pub struct BifrostWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for BifrostWeight<T> {
	/// Storage: SystemStaking TokenList (r:1 w:0)
	/// Proof Skipped: SystemStaking TokenList (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: SystemStaking Round (r:1 w:0)
	/// Proof Skipped: SystemStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: SystemStaking TokenStatus (r:2 w:0)
	/// Proof Skipped: SystemStaking TokenStatus (max_values: None, max_size: None, mode: Measured)
	fn on_initialize() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `507`
		//  Estimated: `7461`
		// Minimum execution time: 15_529_000 picoseconds.
		Weight::from_parts(16_234_000, 7461)
			.saturating_add(T::DbWeight::get().reads(4_u64))
	}
	/// Storage: SystemStaking TokenStatus (r:1 w:1)
	/// Proof Skipped: SystemStaking TokenStatus (max_values: None, max_size: None, mode: Measured)
	/// Storage: SystemStaking TokenList (r:1 w:1)
	/// Proof Skipped: SystemStaking TokenList (max_values: Some(1), max_size: None, mode: Measured)
	fn token_config() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `109`
		//  Estimated: `3188`
		// Minimum execution time: 22_026_000 picoseconds.
		Weight::from_parts(22_618_000, 3188)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: SystemStaking TokenStatus (r:1 w:1)
	/// Proof Skipped: SystemStaking TokenStatus (max_values: None, max_size: None, mode: Measured)
	/// Storage: Farming PoolInfos (r:1 w:0)
	/// Proof Skipped: Farming PoolInfos (max_values: None, max_size: None, mode: Measured)
	fn refresh_token_info() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `402`
		//  Estimated: `5754`
		// Minimum execution time: 27_764_000 picoseconds.
		Weight::from_parts(28_441_000, 5754)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: SystemStaking TokenStatus (r:1 w:0)
	/// Proof Skipped: SystemStaking TokenStatus (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:1 w:0)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: VtokenMinting TokenPool (r:1 w:0)
	/// Proof: VtokenMinting TokenPool (max_values: None, max_size: Some(38), added: 2513, mode: MaxEncodedLen)
	/// Storage: Tokens TotalIssuance (r:1 w:0)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(38), added: 2513, mode: MaxEncodedLen)
	fn payout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1156`
		//  Estimated: `11250`
		// Minimum execution time: 37_967_000 picoseconds.
		Weight::from_parts(38_976_000, 11250)
			.saturating_add(T::DbWeight::get().reads(4_u64))
	}
	fn on_redeem_success() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 684_000 picoseconds.
		Weight::from_parts(778_000, 0)
	}
	fn on_redeemed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 657_000 picoseconds.
		Weight::from_parts(714_000, 0)
	}
	/// Storage: SystemStaking TokenList (r:1 w:1)
	/// Proof Skipped: SystemStaking TokenList (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: SystemStaking TokenStatus (r:0 w:1)
	/// Proof Skipped: SystemStaking TokenStatus (max_values: None, max_size: None, mode: Measured)
	fn delete_token() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `169`
		//  Estimated: `833`
		// Minimum execution time: 11_344_000 picoseconds.
		Weight::from_parts(11_548_000, 833)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: SystemStaking TokenList (r:1 w:0)
	/// Proof Skipped: SystemStaking TokenList (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: SystemStaking Round (r:1 w:0)
	/// Proof Skipped: SystemStaking Round (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: SystemStaking TokenStatus (r:2 w:0)
	/// Proof Skipped: SystemStaking TokenStatus (max_values: None, max_size: None, mode: Measured)
	fn on_initialize() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `507`
		//  Estimated: `7461`
		// Minimum execution time: 15_529_000 picoseconds.
		Weight::from_parts(16_234_000, 7461)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
	}
	/// Storage: SystemStaking TokenStatus (r:1 w:1)
	/// Proof Skipped: SystemStaking TokenStatus (max_values: None, max_size: None, mode: Measured)
	/// Storage: SystemStaking TokenList (r:1 w:1)
	/// Proof Skipped: SystemStaking TokenList (max_values: Some(1), max_size: None, mode: Measured)
	fn token_config() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `109`
		//  Estimated: `3188`
		// Minimum execution time: 22_026_000 picoseconds.
		Weight::from_parts(22_618_000, 3188)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: SystemStaking TokenStatus (r:1 w:1)
	/// Proof Skipped: SystemStaking TokenStatus (max_values: None, max_size: None, mode: Measured)
	/// Storage: Farming PoolInfos (r:1 w:0)
	/// Proof Skipped: Farming PoolInfos (max_values: None, max_size: None, mode: Measured)
	fn refresh_token_info() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `402`
		//  Estimated: `5754`
		// Minimum execution time: 27_764_000 picoseconds.
		Weight::from_parts(28_441_000, 5754)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: SystemStaking TokenStatus (r:1 w:0)
	/// Proof Skipped: SystemStaking TokenStatus (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:1 w:0)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	/// Storage: VtokenMinting TokenPool (r:1 w:0)
	/// Proof: VtokenMinting TokenPool (max_values: None, max_size: Some(38), added: 2513, mode: MaxEncodedLen)
	/// Storage: Tokens TotalIssuance (r:1 w:0)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(38), added: 2513, mode: MaxEncodedLen)
	fn payout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1156`
		//  Estimated: `11250`
		// Minimum execution time: 37_967_000 picoseconds.
		Weight::from_parts(38_976_000, 11250)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
	}
	fn on_redeem_success() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 684_000 picoseconds.
		Weight::from_parts(778_000, 0)
	}
	fn on_redeemed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 657_000 picoseconds.
		Weight::from_parts(714_000, 0)
	}
	/// Storage: SystemStaking TokenList (r:1 w:1)
	/// Proof Skipped: SystemStaking TokenList (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: SystemStaking TokenStatus (r:0 w:1)
	/// Proof Skipped: SystemStaking TokenStatus (max_values: None, max_size: None, mode: Measured)
	fn delete_token() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `169`
		//  Estimated: `833`
		// Minimum execution time: 11_344_000 picoseconds.
		Weight::from_parts(11_548_000, 833)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
}
