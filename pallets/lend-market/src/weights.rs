// This file is part of Parallel Finance.

// Copyright (C) 2022 Parallel Finance Developer.
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_loans
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-05-30, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("kerria-dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/parallel
// benchmark
// pallet
// --chain=kerria-dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=pallet-loans
// --extrinsic=*
// --steps=50
// --repeat=20
// --heap-pages=4096
// --template=./.maintain/frame-weight-template.hbs
// --output=./pallets/loans/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for loans.
pub trait WeightInfo {
	fn add_market() -> Weight;
	fn activate_market() -> Weight;
	fn update_rate_model() -> Weight;
	fn update_market() -> Weight;
	fn force_update_market() -> Weight;
	fn add_reward() -> Weight;
	fn update_market_reward_speed() -> Weight;
	fn claim_reward() -> Weight;
	fn claim_reward_for_market() -> Weight;
	fn mint() -> Weight;
	fn borrow() -> Weight;
	fn redeem() -> Weight;
	fn redeem_all() -> Weight;
	fn repay_borrow() -> Weight;
	fn repay_borrow_all() -> Weight;
	fn deposit_all_collateral() -> Weight;
	fn withdraw_all_collateral() -> Weight;
	fn liquidate_borrow() -> Weight;
	fn reduce_incentive_reserves() -> Weight;
	fn add_reserves() -> Weight;
	fn reduce_reserves() -> Weight;
	fn withdraw_missing_reward() -> Weight;
	fn collateral_asset() -> Weight;
	fn update_liquidation_free_collateral() -> Weight;
}

/// Weights for loans using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: Loans Markets (r:2 w:1)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans UnderlyingAssetId (r:1 w:1)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans MinExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MinExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans ExchangeRate (r:0 w:1)
	/// Proof Skipped: Loans ExchangeRate (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans BorrowIndex (r:0 w:1)
	/// Proof Skipped: Loans BorrowIndex (max_values: None, max_size: None, mode: Measured)
	fn add_market() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1207`
		//  Estimated: `13955`
		// Minimum execution time: 63_487_000 picoseconds.
		Weight::from_parts(64_509_000, 13955)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Loans Markets (r:1 w:1)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	fn activate_market() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1504`
		//  Estimated: `3979`
		// Minimum execution time: 38_988_000 picoseconds.
		Weight::from_parts(39_729_000, 3979)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Loans Markets (r:1 w:1)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	fn update_rate_model() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1504`
		//  Estimated: `3979`
		// Minimum execution time: 39_930_000 picoseconds.
		Weight::from_parts(40_290_000, 3979)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Loans Markets (r:1 w:1)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	fn update_market() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1504`
		//  Estimated: `3979`
		// Minimum execution time: 42_776_000 picoseconds.
		Weight::from_parts(43_437_000, 3979)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Loans UnderlyingAssetId (r:1 w:1)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans Markets (r:1 w:1)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	fn force_update_market() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1515`
		//  Estimated: `7980`
		// Minimum execution time: 49_660_000 picoseconds.
		Weight::from_parts(50_240_000, 7980)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn add_reward() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2308`
		//  Estimated: `7783`
		// Minimum execution time: 94_319_000 picoseconds.
		Weight::from_parts(95_110_000, 7783)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplySpeed (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplySpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowSpeed (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowSpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplyState (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplyState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowState (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowState (max_values: None, max_size: None, mode: Measured)
	fn update_market_reward_speed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1518`
		//  Estimated: `22440`
		// Minimum execution time: 71_924_000 picoseconds.
		Weight::from_parts(72_495_000, 22440)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplyState (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplyState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplySpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardSupplySpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:0)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: Loans RewardSupplierIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplierIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:1 w:1)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:3 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Loans RewardBorrowState (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowSpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardBorrowSpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalBorrows (r:1 w:0)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans BorrowIndex (r:1 w:0)
	/// Proof Skipped: Loans BorrowIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowerIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowerIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans AccountBorrows (r:1 w:0)
	/// Proof Skipped: Loans AccountBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn claim_reward() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3492`
		//  Estimated: `80995`
		// Minimum execution time: 210_812_000 picoseconds.
		Weight::from_parts(211_623_000, 80995)
			.saturating_add(T::DbWeight::get().reads(17_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: Loans RewardSupplyState (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplyState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplySpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardSupplySpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans Markets (r:1 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:0)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: Loans RewardSupplierIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplierIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:1 w:1)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:3 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Loans RewardBorrowState (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowSpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardBorrowSpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalBorrows (r:1 w:0)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans BorrowIndex (r:1 w:0)
	/// Proof Skipped: Loans BorrowIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowerIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowerIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans AccountBorrows (r:1 w:0)
	/// Proof Skipped: Loans AccountBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn claim_reward_for_market() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3492`
		//  Estimated: `78520`
		// Minimum execution time: 196_984_000 picoseconds.
		Weight::from_parts(197_816_000, 78520)
			.saturating_add(T::DbWeight::get().reads(16_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:3 w:3)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplyState (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplyState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplySpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardSupplySpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplierIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplierIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:1 w:1)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans UnderlyingAssetId (r:1 w:0)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Loans TotalBorrows (r:1 w:0)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalReserves (r:1 w:0)
	/// Proof Skipped: Loans TotalReserves (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans MinExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MinExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans AccountDeposits (r:1 w:0)
	/// Proof Skipped: Loans AccountDeposits (max_values: None, max_size: None, mode: Measured)
	fn mint() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2944`
		//  Estimated: `73490`
		// Minimum execution time: 274_890_000 picoseconds.
		Weight::from_parts(276_413_000, 73490)
			.saturating_add(T::DbWeight::get().reads(18_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalBorrows (r:1 w:1)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Loans TotalReserves (r:1 w:0)
	/// Proof Skipped: Loans TotalReserves (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans AccountDeposits (r:1 w:0)
	/// Proof Skipped: Loans AccountDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans UnderlyingAssetId (r:1 w:0)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:0)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: Loans MinExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MinExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans MaxExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MaxExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans AccountBorrows (r:1 w:1)
	/// Proof Skipped: Loans AccountBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowState (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowSpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardBorrowSpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowerIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowerIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:1 w:1)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans BorrowIndex (r:1 w:0)
	/// Proof Skipped: Loans BorrowIndex (max_values: None, max_size: None, mode: Measured)
	fn borrow() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3312`
		//  Estimated: `90329`
		// Minimum execution time: 262_856_000 picoseconds.
		Weight::from_parts(265_230_000, 90329)
			.saturating_add(T::DbWeight::get().reads(20_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans UnderlyingAssetId (r:1 w:0)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:3 w:3)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Loans TotalBorrows (r:1 w:0)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalReserves (r:1 w:0)
	/// Proof Skipped: Loans TotalReserves (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans MinExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MinExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans MaxExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MaxExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans AccountDeposits (r:1 w:0)
	/// Proof Skipped: Loans AccountDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplyState (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplyState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplySpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardSupplySpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplierIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplierIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:1 w:1)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	fn redeem() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3368`
		//  Estimated: `82017`
		// Minimum execution time: 324_119_000 picoseconds.
		Weight::from_parts(324_981_000, 82017)
			.saturating_add(T::DbWeight::get().reads(19_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:3 w:3)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Loans UnderlyingAssetId (r:1 w:0)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Loans TotalBorrows (r:1 w:0)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalReserves (r:1 w:0)
	/// Proof Skipped: Loans TotalReserves (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans MinExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MinExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans MaxExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MaxExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans AccountDeposits (r:1 w:0)
	/// Proof Skipped: Loans AccountDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplyState (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplyState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplySpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardSupplySpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplierIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplierIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:1 w:1)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	fn redeem_all() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3368`
		//  Estimated: `82017`
		// Minimum execution time: 325_041_000 picoseconds.
		Weight::from_parts(327_495_000, 82017)
			.saturating_add(T::DbWeight::get().reads(19_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans AccountBorrows (r:1 w:1)
	/// Proof Skipped: Loans AccountBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans BorrowIndex (r:1 w:0)
	/// Proof Skipped: Loans BorrowIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowState (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowSpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardBorrowSpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowerIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowerIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:1 w:1)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Loans TotalBorrows (r:1 w:1)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	fn repay_borrow() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3407`
		//  Estimated: `61096`
		// Minimum execution time: 179_189_000 picoseconds.
		Weight::from_parts(180_952_000, 61096)
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans AccountBorrows (r:1 w:1)
	/// Proof Skipped: Loans AccountBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans BorrowIndex (r:1 w:0)
	/// Proof Skipped: Loans BorrowIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowState (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowSpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardBorrowSpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowerIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowerIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:1 w:1)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Loans TotalBorrows (r:1 w:1)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	fn repay_borrow_all() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3407`
		//  Estimated: `61096`
		// Minimum execution time: 197_625_000 picoseconds.
		Weight::from_parts(198_568_000, 61096)
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Loans UnderlyingAssetId (r:1 w:0)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans AccountDeposits (r:1 w:1)
	/// Proof Skipped: Loans AccountDeposits (max_values: None, max_size: None, mode: Measured)
	fn deposit_all_collateral() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2295`
		//  Estimated: `19375`
		// Minimum execution time: 102_335_000 picoseconds.
		Weight::from_parts(103_146_000, 19375)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans AccountDeposits (r:1 w:1)
	/// Proof Skipped: Loans AccountDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans UnderlyingAssetId (r:1 w:0)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:0)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:2 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Loans TotalBorrows (r:1 w:0)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalReserves (r:1 w:0)
	/// Proof Skipped: Loans TotalReserves (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans MinExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MinExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans MaxExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MaxExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans AccountBorrows (r:1 w:0)
	/// Proof Skipped: Loans AccountBorrows (max_values: None, max_size: None, mode: Measured)
	fn withdraw_all_collateral() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3242`
		//  Estimated: `60764`
		// Minimum execution time: 225_110_000 picoseconds.
		Weight::from_parts(226_403_000, 60764)
			.saturating_add(T::DbWeight::get().reads(15_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:2 w:2)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans Markets (r:3 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans AccountDeposits (r:4 w:1)
	/// Proof Skipped: Loans AccountDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans UnderlyingAssetId (r:1 w:0)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:0)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:6 w:5)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:4 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Loans TotalBorrows (r:2 w:1)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalReserves (r:1 w:0)
	/// Proof Skipped: Loans TotalReserves (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans MinExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MinExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans MaxExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MaxExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Security ParachainStatus (r:1 w:0)
	/// Proof Skipped: Security ParachainStatus (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Oracle Aggregate (r:1 w:0)
	/// Proof Skipped: Oracle Aggregate (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans AccountBorrows (r:3 w:1)
	/// Proof Skipped: Loans AccountBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans BorrowIndex (r:1 w:0)
	/// Proof Skipped: Loans BorrowIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowState (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowSpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardBorrowSpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowerIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowerIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:3 w:3)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplyState (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplyState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplySpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardSupplySpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplierIndex (r:3 w:3)
	/// Proof Skipped: Loans RewardSupplierIndex (max_values: None, max_size: None, mode: Measured)
	fn liquidate_borrow() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5226`
		//  Estimated: `201519`
		// Minimum execution time: 762_145_000 picoseconds.
		Weight::from_parts(766_944_000, 201519)
			.saturating_add(T::DbWeight::get().reads(44_u64))
			.saturating_add(T::DbWeight::get().writes(21_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans UnderlyingAssetId (r:1 w:0)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:4 w:4)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Loans TotalBorrows (r:1 w:0)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalReserves (r:1 w:0)
	/// Proof Skipped: Loans TotalReserves (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans MinExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MinExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans MaxExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MaxExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans AccountDeposits (r:1 w:0)
	/// Proof Skipped: Loans AccountDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplyState (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplyState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplySpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardSupplySpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplierIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplierIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:1 w:1)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	fn reduce_incentive_reserves() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4362`
		//  Estimated: `99138`
		// Minimum execution time: 413_086_000 picoseconds.
		Weight::from_parts(417_575_000, 99138)
			.saturating_add(T::DbWeight::get().reads(21_u64))
			.saturating_add(T::DbWeight::get().writes(10_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Loans TotalReserves (r:1 w:1)
	/// Proof Skipped: Loans TotalReserves (max_values: None, max_size: None, mode: Measured)
	fn add_reserves() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2768`
		//  Estimated: `26490`
		// Minimum execution time: 131_052_000 picoseconds.
		Weight::from_parts(132_405_000, 26490)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalReserves (r:1 w:1)
	/// Proof Skipped: Loans TotalReserves (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn reduce_reserves() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2857`
		//  Estimated: `26757`
		// Minimum execution time: 115_421_000 picoseconds.
		Weight::from_parts(116_053_000, 26757)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	fn withdraw_missing_reward() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2857`
		//  Estimated: `26757`
		// Minimum execution time: 115_421_000 picoseconds.
		Weight::from_parts(116_053_000, 26757)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	fn update_liquidation_free_collateral() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2857`
		//  Estimated: `26757`
		// Minimum execution time: 115_421_000 picoseconds.
		Weight::from_parts(116_053_000, 26757)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	fn collateral_asset() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2857`
		//  Estimated: `26757`
		// Minimum execution time: 115_421_000 picoseconds.
		Weight::from_parts(116_053_000, 26757)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: Loans Markets (r:2 w:1)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans UnderlyingAssetId (r:1 w:1)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans MinExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MinExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans ExchangeRate (r:0 w:1)
	/// Proof Skipped: Loans ExchangeRate (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans BorrowIndex (r:0 w:1)
	/// Proof Skipped: Loans BorrowIndex (max_values: None, max_size: None, mode: Measured)
	fn add_market() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1207`
		//  Estimated: `13955`
		// Minimum execution time: 63_487_000 picoseconds.
		Weight::from_parts(64_509_000, 13955)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: Loans Markets (r:1 w:1)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	fn activate_market() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1504`
		//  Estimated: `3979`
		// Minimum execution time: 38_988_000 picoseconds.
		Weight::from_parts(39_729_000, 3979)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Loans Markets (r:1 w:1)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	fn update_rate_model() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1504`
		//  Estimated: `3979`
		// Minimum execution time: 39_930_000 picoseconds.
		Weight::from_parts(40_290_000, 3979)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Loans Markets (r:1 w:1)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	fn update_market() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1504`
		//  Estimated: `3979`
		// Minimum execution time: 42_776_000 picoseconds.
		Weight::from_parts(43_437_000, 3979)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Loans UnderlyingAssetId (r:1 w:1)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans Markets (r:1 w:1)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	fn force_update_market() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1515`
		//  Estimated: `7980`
		// Minimum execution time: 49_660_000 picoseconds.
		Weight::from_parts(50_240_000, 7980)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn add_reward() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2308`
		//  Estimated: `7783`
		// Minimum execution time: 94_319_000 picoseconds.
		Weight::from_parts(95_110_000, 7783)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplySpeed (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplySpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowSpeed (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowSpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplyState (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplyState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowState (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowState (max_values: None, max_size: None, mode: Measured)
	fn update_market_reward_speed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1518`
		//  Estimated: `22440`
		// Minimum execution time: 71_924_000 picoseconds.
		Weight::from_parts(72_495_000, 22440)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplyState (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplyState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplySpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardSupplySpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:0)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: Loans RewardSupplierIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplierIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:1 w:1)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:3 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Loans RewardBorrowState (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowSpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardBorrowSpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalBorrows (r:1 w:0)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans BorrowIndex (r:1 w:0)
	/// Proof Skipped: Loans BorrowIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowerIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowerIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans AccountBorrows (r:1 w:0)
	/// Proof Skipped: Loans AccountBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn claim_reward() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3492`
		//  Estimated: `80995`
		// Minimum execution time: 210_812_000 picoseconds.
		Weight::from_parts(211_623_000, 80995)
			.saturating_add(RocksDbWeight::get().reads(17_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
	}
	/// Storage: Loans RewardSupplyState (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplyState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplySpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardSupplySpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans Markets (r:1 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:0)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: Loans RewardSupplierIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplierIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:1 w:1)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:3 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Loans RewardBorrowState (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowSpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardBorrowSpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalBorrows (r:1 w:0)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans BorrowIndex (r:1 w:0)
	/// Proof Skipped: Loans BorrowIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowerIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowerIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans AccountBorrows (r:1 w:0)
	/// Proof Skipped: Loans AccountBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn claim_reward_for_market() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3492`
		//  Estimated: `78520`
		// Minimum execution time: 196_984_000 picoseconds.
		Weight::from_parts(197_816_000, 78520)
			.saturating_add(RocksDbWeight::get().reads(16_u64))
			.saturating_add(RocksDbWeight::get().writes(7_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:3 w:3)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplyState (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplyState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplySpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardSupplySpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplierIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplierIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:1 w:1)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans UnderlyingAssetId (r:1 w:0)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Loans TotalBorrows (r:1 w:0)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalReserves (r:1 w:0)
	/// Proof Skipped: Loans TotalReserves (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans MinExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MinExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans AccountDeposits (r:1 w:0)
	/// Proof Skipped: Loans AccountDeposits (max_values: None, max_size: None, mode: Measured)
	fn mint() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2944`
		//  Estimated: `73490`
		// Minimum execution time: 274_890_000 picoseconds.
		Weight::from_parts(276_413_000, 73490)
			.saturating_add(RocksDbWeight::get().reads(18_u64))
			.saturating_add(RocksDbWeight::get().writes(9_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalBorrows (r:1 w:1)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Loans TotalReserves (r:1 w:0)
	/// Proof Skipped: Loans TotalReserves (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans AccountDeposits (r:1 w:0)
	/// Proof Skipped: Loans AccountDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans UnderlyingAssetId (r:1 w:0)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:0)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: Loans MinExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MinExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans MaxExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MaxExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans AccountBorrows (r:1 w:1)
	/// Proof Skipped: Loans AccountBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowState (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowSpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardBorrowSpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowerIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowerIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:1 w:1)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans BorrowIndex (r:1 w:0)
	/// Proof Skipped: Loans BorrowIndex (max_values: None, max_size: None, mode: Measured)
	fn borrow() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3312`
		//  Estimated: `90329`
		// Minimum execution time: 262_856_000 picoseconds.
		Weight::from_parts(265_230_000, 90329)
			.saturating_add(RocksDbWeight::get().reads(20_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans UnderlyingAssetId (r:1 w:0)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:3 w:3)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Loans TotalBorrows (r:1 w:0)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalReserves (r:1 w:0)
	/// Proof Skipped: Loans TotalReserves (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans MinExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MinExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans MaxExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MaxExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans AccountDeposits (r:1 w:0)
	/// Proof Skipped: Loans AccountDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplyState (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplyState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplySpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardSupplySpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplierIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplierIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:1 w:1)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	fn redeem() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3368`
		//  Estimated: `82017`
		// Minimum execution time: 324_119_000 picoseconds.
		Weight::from_parts(324_981_000, 82017)
			.saturating_add(RocksDbWeight::get().reads(19_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:3 w:3)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Loans UnderlyingAssetId (r:1 w:0)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Loans TotalBorrows (r:1 w:0)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalReserves (r:1 w:0)
	/// Proof Skipped: Loans TotalReserves (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans MinExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MinExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans MaxExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MaxExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans AccountDeposits (r:1 w:0)
	/// Proof Skipped: Loans AccountDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplyState (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplyState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplySpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardSupplySpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplierIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplierIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:1 w:1)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	fn redeem_all() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3368`
		//  Estimated: `82017`
		// Minimum execution time: 325_041_000 picoseconds.
		Weight::from_parts(327_495_000, 82017)
			.saturating_add(RocksDbWeight::get().reads(19_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans AccountBorrows (r:1 w:1)
	/// Proof Skipped: Loans AccountBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans BorrowIndex (r:1 w:0)
	/// Proof Skipped: Loans BorrowIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowState (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowSpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardBorrowSpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowerIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowerIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:1 w:1)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Loans TotalBorrows (r:1 w:1)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	fn repay_borrow() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3407`
		//  Estimated: `61096`
		// Minimum execution time: 179_189_000 picoseconds.
		Weight::from_parts(180_952_000, 61096)
			.saturating_add(RocksDbWeight::get().reads(13_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans AccountBorrows (r:1 w:1)
	/// Proof Skipped: Loans AccountBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans BorrowIndex (r:1 w:0)
	/// Proof Skipped: Loans BorrowIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowState (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowSpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardBorrowSpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowerIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowerIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:1 w:1)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Loans TotalBorrows (r:1 w:1)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	fn repay_borrow_all() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3407`
		//  Estimated: `61096`
		// Minimum execution time: 197_625_000 picoseconds.
		Weight::from_parts(198_568_000, 61096)
			.saturating_add(RocksDbWeight::get().reads(13_u64))
			.saturating_add(RocksDbWeight::get().writes(8_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:1 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: Loans UnderlyingAssetId (r:1 w:0)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans AccountDeposits (r:1 w:1)
	/// Proof Skipped: Loans AccountDeposits (max_values: None, max_size: None, mode: Measured)
	fn deposit_all_collateral() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2295`
		//  Estimated: `19375`
		// Minimum execution time: 102_335_000 picoseconds.
		Weight::from_parts(103_146_000, 19375)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans AccountDeposits (r:1 w:1)
	/// Proof Skipped: Loans AccountDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans UnderlyingAssetId (r:1 w:0)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:0)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:2 w:1)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Loans TotalBorrows (r:1 w:0)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalReserves (r:1 w:0)
	/// Proof Skipped: Loans TotalReserves (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans MinExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MinExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans MaxExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MaxExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans AccountBorrows (r:1 w:0)
	/// Proof Skipped: Loans AccountBorrows (max_values: None, max_size: None, mode: Measured)
	fn withdraw_all_collateral() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3242`
		//  Estimated: `60764`
		// Minimum execution time: 225_110_000 picoseconds.
		Weight::from_parts(226_403_000, 60764)
			.saturating_add(RocksDbWeight::get().reads(15_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:2 w:2)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans Markets (r:3 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans AccountDeposits (r:4 w:1)
	/// Proof Skipped: Loans AccountDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans UnderlyingAssetId (r:1 w:0)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:0)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:6 w:5)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:4 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Loans TotalBorrows (r:2 w:1)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalReserves (r:1 w:0)
	/// Proof Skipped: Loans TotalReserves (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans MinExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MinExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans MaxExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MaxExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Security ParachainStatus (r:1 w:0)
	/// Proof Skipped: Security ParachainStatus (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Oracle Aggregate (r:1 w:0)
	/// Proof Skipped: Oracle Aggregate (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans AccountBorrows (r:3 w:1)
	/// Proof Skipped: Loans AccountBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans BorrowIndex (r:1 w:0)
	/// Proof Skipped: Loans BorrowIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowState (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowSpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardBorrowSpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardBorrowerIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardBorrowerIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:3 w:3)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplyState (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplyState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplySpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardSupplySpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplierIndex (r:3 w:3)
	/// Proof Skipped: Loans RewardSupplierIndex (max_values: None, max_size: None, mode: Measured)
	fn liquidate_borrow() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5226`
		//  Estimated: `201519`
		// Minimum execution time: 762_145_000 picoseconds.
		Weight::from_parts(766_944_000, 201519)
			.saturating_add(RocksDbWeight::get().reads(44_u64))
			.saturating_add(RocksDbWeight::get().writes(21_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans UnderlyingAssetId (r:1 w:0)
	/// Proof Skipped: Loans UnderlyingAssetId (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens TotalIssuance (r:1 w:1)
	/// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(35), added: 2510, mode: MaxEncodedLen)
	/// Storage: Tokens Accounts (r:4 w:4)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Loans TotalBorrows (r:1 w:0)
	/// Proof Skipped: Loans TotalBorrows (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalReserves (r:1 w:0)
	/// Proof Skipped: Loans TotalReserves (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans MinExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MinExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans MaxExchangeRate (r:1 w:0)
	/// Proof Skipped: Loans MaxExchangeRate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Loans AccountDeposits (r:1 w:0)
	/// Proof Skipped: Loans AccountDeposits (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplyState (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplyState (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplySpeed (r:1 w:0)
	/// Proof Skipped: Loans RewardSupplySpeed (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardSupplierIndex (r:1 w:1)
	/// Proof Skipped: Loans RewardSupplierIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans RewardAccrued (r:1 w:1)
	/// Proof Skipped: Loans RewardAccrued (max_values: None, max_size: None, mode: Measured)
	fn reduce_incentive_reserves() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4362`
		//  Estimated: `99138`
		// Minimum execution time: 413_086_000 picoseconds.
		Weight::from_parts(417_575_000, 99138)
			.saturating_add(RocksDbWeight::get().reads(21_u64))
			.saturating_add(RocksDbWeight::get().writes(10_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Loans TotalReserves (r:1 w:1)
	/// Proof Skipped: Loans TotalReserves (max_values: None, max_size: None, mode: Measured)
	fn add_reserves() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2768`
		//  Estimated: `26490`
		// Minimum execution time: 131_052_000 picoseconds.
		Weight::from_parts(132_405_000, 26490)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: Loans Markets (r:2 w:0)
	/// Proof Skipped: Loans Markets (max_values: None, max_size: None, mode: Measured)
	/// Storage: Timestamp Now (r:1 w:0)
	/// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: MaxEncodedLen)
	/// Storage: Loans LastAccruedInterestTime (r:1 w:1)
	/// Proof Skipped: Loans LastAccruedInterestTime (max_values: None, max_size: None, mode: Measured)
	/// Storage: Loans TotalReserves (r:1 w:1)
	/// Proof Skipped: Loans TotalReserves (max_values: None, max_size: None, mode: Measured)
	/// Storage: Tokens Accounts (r:2 w:2)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(115), added: 2590, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:0)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn reduce_reserves() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2857`
		//  Estimated: `26757`
		// Minimum execution time: 115_421_000 picoseconds.
		Weight::from_parts(116_053_000, 26757)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	fn withdraw_missing_reward() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2857`
		//  Estimated: `26757`
		// Minimum execution time: 115_421_000 picoseconds.
		Weight::from_parts(116_053_000, 26757)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	fn update_liquidation_free_collateral() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2857`
		//  Estimated: `26757`
		// Minimum execution time: 115_421_000 picoseconds.
		Weight::from_parts(116_053_000, 26757)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	fn collateral_asset() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2857`
		//  Estimated: `26757`
		// Minimum execution time: 115_421_000 picoseconds.
		Weight::from_parts(116_053_000, 26757)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
}
