// This file is part of Bifrost.

// Copyright (C) 2019-2022 Liebi Technologies (UK) Ltd.
// SPDX-License-Identifier: GPL-3.0-or-later WITH Classpath-exception-2.0

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program. If not, see <https://www.gnu.org/licenses/>.
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for bifrost_slp
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-05-18, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `VM-16-3-ubuntu`, CPU: `Intel(R) Xeon(R) Platinum 8374C CPU @ 2.70GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("bifrost-kusama-local"), DB CACHE: 1024

// Executed Command:
// ./target/release/bifrost
// benchmark
// pallet
// --chain=bifrost-kusama-local
// --steps=50
// --repeat=20
// --pallet=bifrost_slp
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --header=./HEADER-GPL3
// --output=./weight.rs
// --template
// ./frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for bifrost_slp.
pub trait WeightInfo {
	fn initialize_delegator() -> Weight;
	fn bond() -> Weight;
	fn bond_extra() -> Weight;
	fn rebond() -> Weight;
	fn delegate() -> Weight;
	fn redelegate() -> Weight;
	fn payout() -> Weight;
	fn liquidize() -> Weight;
	fn transfer_back() -> Weight;
	fn increase_token_pool() -> Weight;
	fn decrease_token_pool() -> Weight;
	fn update_ongoing_time_unit() -> Weight;
	fn refund_currency_due_unbond() -> Weight;
	fn confirm_delegator_ledger_query_response() -> Weight;
	fn fail_delegator_ledger_query_response() -> Weight;
	fn set_xcm_dest_weight_and_fee() -> Weight;
	fn set_operate_origin() -> Weight;
	fn set_fee_source() -> Weight;
	fn add_delegator() -> Weight;
	fn remove_delegator() -> Weight;
	fn set_validators_by_delegator() -> Weight;
	fn set_delegator_ledger() -> Weight;
	fn add_validator() -> Weight;
	fn remove_validator() -> Weight;
	fn set_minimums_and_maximums() -> Weight;
	fn set_currency_delays() -> Weight;
	fn set_hosting_fees() -> Weight;
	fn set_currency_tune_exchange_rate_limit() -> Weight;
	fn set_ongoing_time_unit_update_interval() -> Weight;
	fn add_supplement_fee_account_to_whitelist() -> Weight;
	fn remove_supplement_fee_account_from_whitelist() -> Weight;
	fn convert_asset() -> Weight;
	fn charge_host_fee_and_tune_vtoken_exchange_rate() -> Weight;
	fn reset_validators() -> Weight;
	fn set_validator_boost_list() -> Weight;
	fn add_to_validator_boost_list() -> Weight;
	fn remove_from_validator_boot_list() -> Weight;
	fn unbond() -> Weight;
	fn unbond_all() -> Weight;
	fn undelegate() -> Weight;
	fn transfer_to() -> Weight;
	fn chill() -> Weight;
	fn supplement_fee_reserve() -> Weight;
	fn confirm_validators_by_delegator_query_response() -> Weight;
	fn fail_validators_by_delegator_query_response() -> Weight;
}

/// Weights for bifrost_slp using the Bifrost node and recommended hardware.
pub struct BifrostWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for BifrostWeight<T> {
	/// Storage: Slp DelegatorNextIndex (r:1 w:1)
	/// Proof Skipped: Slp DelegatorNextIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Slp DelegatorsIndex2Multilocation (r:1 w:1)
	/// Proof Skipped: Slp DelegatorsIndex2Multilocation (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:0 w:1)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	fn initialize_delegator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `513`
		//  Estimated: `9976`
		// Minimum execution time: 45_109_000 picoseconds.
		Weight::from_parts(46_300_000, 9976)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:1)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn bond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1085`
		//  Estimated: `22049`
		// Minimum execution time: 73_064_000 picoseconds.
		Weight::from_parts(75_073_000, 22049)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:0)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1353`
		//  Estimated: `24193`
		// Minimum execution time: 73_141_000 picoseconds.
		Weight::from_parts(76_028_000, 24193)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:0)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn rebond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1316`
		//  Estimated: `23897`
		// Minimum execution time: 72_901_000 picoseconds.
		Weight::from_parts(74_450_000, 23897)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:0)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp Validators (r:1 w:0)
	/// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Slp ValidatorsByDelegatorXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp ValidatorsByDelegatorXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn delegate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1379`
		//  Estimated: `28255`
		// Minimum execution time: 77_181_000 picoseconds.
		Weight::from_parts(80_288_000, 28255)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:0)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp Validators (r:1 w:0)
	/// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Slp ValidatorsByDelegatorXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp ValidatorsByDelegatorXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn redelegate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1379`
		//  Estimated: `28255`
		// Minimum execution time: 76_731_000 picoseconds.
		Weight::from_parts(79_405_000, 28255)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn payout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `925`
		//  Estimated: `10699`
		// Minimum execution time: 40_466_000 picoseconds.
		Weight::from_parts(41_278_000, 10699)
			.saturating_add(T::DbWeight::get().reads(4_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VtokenMinting OngoingTimeUnit (r:1 w:0)
	/// Proof: VtokenMinting OngoingTimeUnit (max_values: None, max_size: Some(27), added: 2502, mode: MaxEncodedLen)
	/// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn liquidize() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1196`
		//  Estimated: `18097`
		// Minimum execution time: 67_992_000 picoseconds.
		Weight::from_parts(70_239_000, 18097)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	fn transfer_back() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `925`
		//  Estimated: `10699`
		// Minimum execution time: 49_821_000 picoseconds.
		Weight::from_parts(51_214_000, 10699)
			.saturating_add(T::DbWeight::get().reads(4_u64))
	}
	/// Storage: VtokenMinting TokenPool (r:1 w:1)
	/// Proof: VtokenMinting TokenPool (max_values: None, max_size: Some(38), added: 2513, mode: MaxEncodedLen)
	fn increase_token_pool() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `147`
		//  Estimated: `2513`
		// Minimum execution time: 15_914_000 picoseconds.
		Weight::from_parts(16_266_000, 2513)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: VtokenMinting TokenPool (r:1 w:1)
	/// Proof: VtokenMinting TokenPool (max_values: None, max_size: Some(38), added: 2513, mode: MaxEncodedLen)
	fn decrease_token_pool() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `197`
		//  Estimated: `2513`
		// Minimum execution time: 17_535_000 picoseconds.
		Weight::from_parts(18_127_000, 2513)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Slp OngoingTimeUnitUpdateInterval (r:1 w:0)
	/// Proof Skipped: Slp OngoingTimeUnitUpdateInterval (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp LastTimeUpdatedOngoingTimeUnit (r:1 w:1)
	/// Proof Skipped: Slp LastTimeUpdatedOngoingTimeUnit (max_values: None, max_size: None, mode: Measured)
	/// Storage: VtokenMinting OngoingTimeUnit (r:1 w:1)
	/// Proof: VtokenMinting OngoingTimeUnit (max_values: None, max_size: Some(27), added: 2502, mode: MaxEncodedLen)
	fn update_ongoing_time_unit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `244`
		//  Estimated: `7940`
		// Minimum execution time: 30_045_000 picoseconds.
		Weight::from_parts(30_687_000, 7940)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Tokens Accounts (r:1 w:0)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	fn refund_currency_due_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `686`
		//  Estimated: `2593`
		// Minimum execution time: 12_289_000 picoseconds.
		Weight::from_parts(12_745_000, 2593)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:1 w:1)
	/// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:1)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	fn confirm_delegator_ledger_query_response() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `593`
		//  Estimated: `9204`
		// Minimum execution time: 38_266_000 picoseconds.
		Weight::from_parts(39_381_000, 9204)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:1 w:1)
	/// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:1 w:0)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn fail_delegator_ledger_query_response() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `723`
		//  Estimated: `9594`
		// Minimum execution time: 35_985_000 picoseconds.
		Weight::from_parts(36_653_000, 9594)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:1)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	fn set_xcm_dest_weight_and_fee() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2479`
		// Minimum execution time: 16_010_000 picoseconds.
		Weight::from_parts(16_690_000, 2479)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:1)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	fn set_operate_origin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2479`
		// Minimum execution time: 15_069_000 picoseconds.
		Weight::from_parts(15_685_000, 2479)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Slp FeeSources (r:1 w:1)
	/// Proof Skipped: Slp FeeSources (max_values: None, max_size: None, mode: Measured)
	fn set_fee_source() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2479`
		// Minimum execution time: 16_300_000 picoseconds.
		Weight::from_parts(16_876_000, 2479)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Slp DelegatorsIndex2Multilocation (r:1 w:1)
	/// Proof Skipped: Slp DelegatorsIndex2Multilocation (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorNextIndex (r:1 w:0)
	/// Proof Skipped: Slp DelegatorNextIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:0 w:1)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	fn add_delegator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `443`
		//  Estimated: `9197`
		// Minimum execution time: 34_677_000 picoseconds.
		Weight::from_parts(35_575_000, 9197)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Slp DelegatorLedgers (r:1 w:1)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:1)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsIndex2Multilocation (r:0 w:1)
	/// Proof Skipped: Slp DelegatorsIndex2Multilocation (max_values: None, max_size: None, mode: Measured)
	fn remove_delegator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `554`
		//  Estimated: `6612`
		// Minimum execution time: 37_079_000 picoseconds.
		Weight::from_parts(38_110_000, 6612)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:0)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp Validators (r:1 w:0)
	/// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp ValidatorsByDelegator (r:0 w:1)
	/// Proof Skipped: Slp ValidatorsByDelegator (max_values: None, max_size: None, mode: Measured)
	fn set_validators_by_delegator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `508`
		//  Estimated: `9457`
		// Minimum execution time: 34_055_000 picoseconds.
		Weight::from_parts(35_419_000, 9457)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Slp DelegatorLedgers (r:1 w:1)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	fn set_delegator_ledger() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `252`
		//  Estimated: `2727`
		// Minimum execution time: 20_743_000 picoseconds.
		Weight::from_parts(21_269_000, 2727)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Slp Validators (r:1 w:1)
	/// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	fn add_validator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `315`
		//  Estimated: `5580`
		// Minimum execution time: 27_216_000 picoseconds.
		Weight::from_parts(27_971_000, 5580)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Slp Validators (r:1 w:1)
	/// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	fn remove_validator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `357`
		//  Estimated: `2832`
		// Minimum execution time: 23_799_000 picoseconds.
		Weight::from_parts(24_611_000, 2832)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Slp MinimumsAndMaximums (r:1 w:1)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	fn set_minimums_and_maximums() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2479`
		// Minimum execution time: 16_332_000 picoseconds.
		Weight::from_parts(16_789_000, 2479)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Slp CurrencyDelays (r:1 w:1)
	/// Proof Skipped: Slp CurrencyDelays (max_values: None, max_size: None, mode: Measured)
	fn set_currency_delays() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2479`
		// Minimum execution time: 14_983_000 picoseconds.
		Weight::from_parts(15_413_000, 2479)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Slp HostingFees (r:1 w:1)
	/// Proof Skipped: Slp HostingFees (max_values: None, max_size: None, mode: Measured)
	fn set_hosting_fees() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2479`
		// Minimum execution time: 15_983_000 picoseconds.
		Weight::from_parts(16_672_000, 2479)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Slp CurrencyTuneExchangeRateLimit (r:1 w:1)
	/// Proof Skipped: Slp CurrencyTuneExchangeRateLimit (max_values: None, max_size: None, mode: Measured)
	fn set_currency_tune_exchange_rate_limit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2479`
		// Minimum execution time: 15_179_000 picoseconds.
		Weight::from_parts(15_487_000, 2479)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Slp OngoingTimeUnitUpdateInterval (r:1 w:1)
	/// Proof Skipped: Slp OngoingTimeUnitUpdateInterval (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp LastTimeUpdatedOngoingTimeUnit (r:0 w:1)
	/// Proof Skipped: Slp LastTimeUpdatedOngoingTimeUnit (max_values: None, max_size: None, mode: Measured)
	fn set_ongoing_time_unit_update_interval() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2483`
		// Minimum execution time: 18_539_000 picoseconds.
		Weight::from_parts(19_077_000, 2483)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Slp SupplementFeeAccountWhitelist (r:1 w:1)
	/// Proof Skipped: Slp SupplementFeeAccountWhitelist (max_values: None, max_size: None, mode: Measured)
	fn add_supplement_fee_account_to_whitelist() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2479`
		// Minimum execution time: 18_611_000 picoseconds.
		Weight::from_parts(19_403_000, 2479)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Slp SupplementFeeAccountWhitelist (r:1 w:1)
	/// Proof Skipped: Slp SupplementFeeAccountWhitelist (max_values: None, max_size: None, mode: Measured)
	fn remove_supplement_fee_account_from_whitelist() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `151`
		//  Estimated: `2626`
		// Minimum execution time: 20_681_000 picoseconds.
		Weight::from_parts(21_293_000, 2626)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}

	fn convert_asset() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2479`
		// Minimum execution time: 18_611_000 picoseconds.
		Weight::from_parts(19_403_000, 2479)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}

	fn charge_host_fee_and_tune_vtoken_exchange_rate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2483`
		// Minimum execution time: 18_539_000 picoseconds.
		Weight::from_parts(19_077_000, 2483)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}

	/// Storage: Slp Validators (r:1 w:1)
	/// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	fn reset_validators() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `357`
		//  Estimated: `2832`
		// Minimum execution time: 23_799_000 picoseconds.
		Weight::from_parts(24_611_000, 2832)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Slp Validators (r:1 w:1)
	/// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	fn set_validator_boost_list() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `357`
		//  Estimated: `2832`
		// Minimum execution time: 23_799_000 picoseconds.
		Weight::from_parts(24_611_000, 2832)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Slp Validators (r:1 w:1)
	/// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	fn add_to_validator_boost_list() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `357`
		//  Estimated: `2832`
		// Minimum execution time: 23_799_000 picoseconds.
		Weight::from_parts(24_611_000, 2832)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Slp Validators (r:1 w:1)
	/// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	fn remove_from_validator_boot_list() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `357`
		//  Estimated: `2832`
		// Minimum execution time: 23_799_000 picoseconds.
		Weight::from_parts(24_611_000, 2832)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:0)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VtokenMinting OngoingTimeUnit (r:1 w:0)
	/// Proof: VtokenMinting OngoingTimeUnit (max_values: None, max_size: Some(27), added: 2502, mode: MaxEncodedLen)
	/// Storage: Slp CurrencyDelays (r:1 w:0)
	/// Proof Skipped: Slp CurrencyDelays (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1440`
		//  Estimated: `31306`
		// Minimum execution time: 83_480_000 picoseconds.
		Weight::from_parts(85_050_000, 31306)
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:0)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VtokenMinting OngoingTimeUnit (r:1 w:0)
	/// Proof: VtokenMinting OngoingTimeUnit (max_values: None, max_size: Some(27), added: 2502, mode: MaxEncodedLen)
	/// Storage: Slp CurrencyDelays (r:1 w:0)
	/// Proof Skipped: Slp CurrencyDelays (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn unbond_all() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1412`
		//  Estimated: `27167`
		// Minimum execution time: 79_009_000 picoseconds.
		Weight::from_parts(80_900_000, 27167)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:0)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp ValidatorsByDelegator (r:1 w:0)
	/// Proof Skipped: Slp ValidatorsByDelegator (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Slp ValidatorsByDelegatorXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp ValidatorsByDelegatorXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn undelegate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1384`
		//  Estimated: `24441`
		// Minimum execution time: 74_503_000 picoseconds.
		Weight::from_parts(76_070_000, 24441)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	fn transfer_to() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `818`
		//  Estimated: `9879`
		// Minimum execution time: 33_402_000 picoseconds.
		Weight::from_parts(34_733_000, 9879)
			.saturating_add(T::DbWeight::get().reads(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Slp DelegatorLedgers (r:1 w:0)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: VtokenMinting OngoingTimeUnit (r:1 w:0)
	/// Proof: VtokenMinting OngoingTimeUnit (max_values: None, max_size: Some(27), added: 2502, mode: MaxEncodedLen)
	/// Storage: Slp CurrencyDelays (r:1 w:0)
	/// Proof Skipped: Slp CurrencyDelays (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn chill() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1287`
		//  Estimated: `26167`
		// Minimum execution time: 79_577_000 picoseconds.
		Weight::from_parts(82_466_000, 26167)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp FeeSources (r:1 w:0)
	/// Proof Skipped: Slp FeeSources (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	fn supplement_fee_reserve() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `980`
		//  Estimated: `13820`
		// Minimum execution time: 38_539_000 picoseconds.
		Weight::from_parts(39_783_000, 13820)
			.saturating_add(T::DbWeight::get().reads(4_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp ValidatorsByDelegatorXcmUpdateQueue (r:1 w:1)
	/// Proof Skipped: Slp ValidatorsByDelegatorXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp ValidatorsByDelegator (r:0 w:1)
	/// Proof Skipped: Slp ValidatorsByDelegator (max_values: None, max_size: None, mode: Measured)
	fn confirm_validators_by_delegator_query_response() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `484`
		//  Estimated: `6402`
		// Minimum execution time: 32_916_000 picoseconds.
		Weight::from_parts(33_801_000, 6402)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp ValidatorsByDelegatorXcmUpdateQueue (r:1 w:1)
	/// Proof Skipped: Slp ValidatorsByDelegatorXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:1 w:0)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn fail_validators_by_delegator_query_response() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `746`
		//  Estimated: `9663`
		// Minimum execution time: 36_302_000 picoseconds.
		Weight::from_parts(37_273_000, 9663)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: Slp DelegatorNextIndex (r:1 w:1)
	/// Proof Skipped: Slp DelegatorNextIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Slp DelegatorsIndex2Multilocation (r:1 w:1)
	/// Proof Skipped: Slp DelegatorsIndex2Multilocation (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:0 w:1)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	fn initialize_delegator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `513`
		//  Estimated: `9976`
		// Minimum execution time: 45_109_000 picoseconds.
		Weight::from_parts(46_300_000, 9976)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:1)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn bond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1085`
		//  Estimated: `22049`
		// Minimum execution time: 73_064_000 picoseconds.
		Weight::from_parts(75_073_000, 22049)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:0)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1353`
		//  Estimated: `24193`
		// Minimum execution time: 73_141_000 picoseconds.
		Weight::from_parts(76_028_000, 24193)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:0)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn rebond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1316`
		//  Estimated: `23897`
		// Minimum execution time: 72_901_000 picoseconds.
		Weight::from_parts(74_450_000, 23897)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:0)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp Validators (r:1 w:0)
	/// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Slp ValidatorsByDelegatorXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp ValidatorsByDelegatorXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn delegate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1379`
		//  Estimated: `28255`
		// Minimum execution time: 77_181_000 picoseconds.
		Weight::from_parts(80_288_000, 28255)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:0)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp Validators (r:1 w:0)
	/// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Slp ValidatorsByDelegatorXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp ValidatorsByDelegatorXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn redelegate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1379`
		//  Estimated: `28255`
		// Minimum execution time: 76_731_000 picoseconds.
		Weight::from_parts(79_405_000, 28255)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn payout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `925`
		//  Estimated: `10699`
		// Minimum execution time: 40_466_000 picoseconds.
		Weight::from_parts(41_278_000, 10699)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VtokenMinting OngoingTimeUnit (r:1 w:0)
	/// Proof: VtokenMinting OngoingTimeUnit (max_values: None, max_size: Some(27), added: 2502, mode: MaxEncodedLen)
	/// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn liquidize() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1196`
		//  Estimated: `18097`
		// Minimum execution time: 67_992_000 picoseconds.
		Weight::from_parts(70_239_000, 18097)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	fn transfer_back() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `925`
		//  Estimated: `10699`
		// Minimum execution time: 49_821_000 picoseconds.
		Weight::from_parts(51_214_000, 10699)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
	}
	/// Storage: VtokenMinting TokenPool (r:1 w:1)
	/// Proof: VtokenMinting TokenPool (max_values: None, max_size: Some(38), added: 2513, mode: MaxEncodedLen)
	fn increase_token_pool() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `147`
		//  Estimated: `2513`
		// Minimum execution time: 15_914_000 picoseconds.
		Weight::from_parts(16_266_000, 2513)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: VtokenMinting TokenPool (r:1 w:1)
	/// Proof: VtokenMinting TokenPool (max_values: None, max_size: Some(38), added: 2513, mode: MaxEncodedLen)
	fn decrease_token_pool() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `197`
		//  Estimated: `2513`
		// Minimum execution time: 17_535_000 picoseconds.
		Weight::from_parts(18_127_000, 2513)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Slp OngoingTimeUnitUpdateInterval (r:1 w:0)
	/// Proof Skipped: Slp OngoingTimeUnitUpdateInterval (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp LastTimeUpdatedOngoingTimeUnit (r:1 w:1)
	/// Proof Skipped: Slp LastTimeUpdatedOngoingTimeUnit (max_values: None, max_size: None, mode: Measured)
	/// Storage: VtokenMinting OngoingTimeUnit (r:1 w:1)
	/// Proof: VtokenMinting OngoingTimeUnit (max_values: None, max_size: Some(27), added: 2502, mode: MaxEncodedLen)
	fn update_ongoing_time_unit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `244`
		//  Estimated: `7940`
		// Minimum execution time: 30_045_000 picoseconds.
		Weight::from_parts(30_687_000, 7940)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Tokens Accounts (r:1 w:0)
	/// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	fn refund_currency_due_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `686`
		//  Estimated: `2593`
		// Minimum execution time: 12_289_000 picoseconds.
		Weight::from_parts(12_745_000, 2593)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:1 w:1)
	/// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:1)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	fn confirm_delegator_ledger_query_response() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `593`
		//  Estimated: `9204`
		// Minimum execution time: 38_266_000 picoseconds.
		Weight::from_parts(39_381_000, 9204)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:1 w:1)
	/// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:1 w:0)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn fail_delegator_ledger_query_response() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `723`
		//  Estimated: `9594`
		// Minimum execution time: 35_985_000 picoseconds.
		Weight::from_parts(36_653_000, 9594)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:1)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	fn set_xcm_dest_weight_and_fee() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2479`
		// Minimum execution time: 16_010_000 picoseconds.
		Weight::from_parts(16_690_000, 2479)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:1)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	fn set_operate_origin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2479`
		// Minimum execution time: 15_069_000 picoseconds.
		Weight::from_parts(15_685_000, 2479)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Slp FeeSources (r:1 w:1)
	/// Proof Skipped: Slp FeeSources (max_values: None, max_size: None, mode: Measured)
	fn set_fee_source() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2479`
		// Minimum execution time: 16_300_000 picoseconds.
		Weight::from_parts(16_876_000, 2479)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Slp DelegatorsIndex2Multilocation (r:1 w:1)
	/// Proof Skipped: Slp DelegatorsIndex2Multilocation (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorNextIndex (r:1 w:0)
	/// Proof Skipped: Slp DelegatorNextIndex (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:0 w:1)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	fn add_delegator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `443`
		//  Estimated: `9197`
		// Minimum execution time: 34_677_000 picoseconds.
		Weight::from_parts(35_575_000, 9197)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Slp DelegatorLedgers (r:1 w:1)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:1)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsIndex2Multilocation (r:0 w:1)
	/// Proof Skipped: Slp DelegatorsIndex2Multilocation (max_values: None, max_size: None, mode: Measured)
	fn remove_delegator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `554`
		//  Estimated: `6612`
		// Minimum execution time: 37_079_000 picoseconds.
		Weight::from_parts(38_110_000, 6612)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:0)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp Validators (r:1 w:0)
	/// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp ValidatorsByDelegator (r:0 w:1)
	/// Proof Skipped: Slp ValidatorsByDelegator (max_values: None, max_size: None, mode: Measured)
	fn set_validators_by_delegator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `508`
		//  Estimated: `9457`
		// Minimum execution time: 34_055_000 picoseconds.
		Weight::from_parts(35_419_000, 9457)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Slp DelegatorLedgers (r:1 w:1)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	fn set_delegator_ledger() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `252`
		//  Estimated: `2727`
		// Minimum execution time: 20_743_000 picoseconds.
		Weight::from_parts(21_269_000, 2727)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Slp Validators (r:1 w:1)
	/// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	fn add_validator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `315`
		//  Estimated: `5580`
		// Minimum execution time: 27_216_000 picoseconds.
		Weight::from_parts(27_971_000, 5580)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Slp Validators (r:1 w:1)
	/// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	fn remove_validator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `357`
		//  Estimated: `2832`
		// Minimum execution time: 23_799_000 picoseconds.
		Weight::from_parts(24_611_000, 2832)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Slp MinimumsAndMaximums (r:1 w:1)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	fn set_minimums_and_maximums() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2479`
		// Minimum execution time: 16_332_000 picoseconds.
		Weight::from_parts(16_789_000, 2479)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Slp CurrencyDelays (r:1 w:1)
	/// Proof Skipped: Slp CurrencyDelays (max_values: None, max_size: None, mode: Measured)
	fn set_currency_delays() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2479`
		// Minimum execution time: 14_983_000 picoseconds.
		Weight::from_parts(15_413_000, 2479)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Slp HostingFees (r:1 w:1)
	/// Proof Skipped: Slp HostingFees (max_values: None, max_size: None, mode: Measured)
	fn set_hosting_fees() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2479`
		// Minimum execution time: 15_983_000 picoseconds.
		Weight::from_parts(16_672_000, 2479)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Slp CurrencyTuneExchangeRateLimit (r:1 w:1)
	/// Proof Skipped: Slp CurrencyTuneExchangeRateLimit (max_values: None, max_size: None, mode: Measured)
	fn set_currency_tune_exchange_rate_limit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2479`
		// Minimum execution time: 15_179_000 picoseconds.
		Weight::from_parts(15_487_000, 2479)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Slp OngoingTimeUnitUpdateInterval (r:1 w:1)
	/// Proof Skipped: Slp OngoingTimeUnitUpdateInterval (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp LastTimeUpdatedOngoingTimeUnit (r:0 w:1)
	/// Proof Skipped: Slp LastTimeUpdatedOngoingTimeUnit (max_values: None, max_size: None, mode: Measured)
	fn set_ongoing_time_unit_update_interval() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2483`
		// Minimum execution time: 18_539_000 picoseconds.
		Weight::from_parts(19_077_000, 2483)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Slp SupplementFeeAccountWhitelist (r:1 w:1)
	/// Proof Skipped: Slp SupplementFeeAccountWhitelist (max_values: None, max_size: None, mode: Measured)
	fn add_supplement_fee_account_to_whitelist() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2479`
		// Minimum execution time: 18_611_000 picoseconds.
		Weight::from_parts(19_403_000, 2479)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Slp SupplementFeeAccountWhitelist (r:1 w:1)
	/// Proof Skipped: Slp SupplementFeeAccountWhitelist (max_values: None, max_size: None, mode: Measured)
	fn remove_supplement_fee_account_from_whitelist() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `151`
		//  Estimated: `2626`
		// Minimum execution time: 20_681_000 picoseconds.
		Weight::from_parts(21_293_000, 2626)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Slp SupplementFeeAccountWhitelist (r:1 w:1)
	/// Proof Skipped: Slp SupplementFeeAccountWhitelist (max_values: None, max_size: None, mode: Measured)
	fn convert_asset() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `151`
		//  Estimated: `2626`
		// Minimum execution time: 20_681_000 picoseconds.
		Weight::from_parts(21_293_000, 2626)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:0)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	/// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VtokenMinting OngoingTimeUnit (r:1 w:0)
	/// Proof: VtokenMinting OngoingTimeUnit (max_values: None, max_size: Some(27), added: 2502, mode: MaxEncodedLen)
	/// Storage: Slp CurrencyDelays (r:1 w:0)
	/// Proof Skipped: Slp CurrencyDelays (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1440`
		//  Estimated: `31306`
		// Minimum execution time: 83_480_000 picoseconds.
		Weight::from_parts(85_050_000, 31306)
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:0)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: VtokenMinting OngoingTimeUnit (r:1 w:0)
	/// Proof: VtokenMinting OngoingTimeUnit (max_values: None, max_size: Some(27), added: 2502, mode: MaxEncodedLen)
	/// Storage: Slp CurrencyDelays (r:1 w:0)
	/// Proof Skipped: Slp CurrencyDelays (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn unbond_all() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1412`
		//  Estimated: `27167`
		// Minimum execution time: 79_009_000 picoseconds.
		Weight::from_parts(80_900_000, 27167)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgers (r:1 w:0)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp ValidatorsByDelegator (r:1 w:0)
	/// Proof Skipped: Slp ValidatorsByDelegator (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Slp ValidatorsByDelegatorXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp ValidatorsByDelegatorXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn undelegate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1384`
		//  Estimated: `24441`
		// Minimum execution time: 74_503_000 picoseconds.
		Weight::from_parts(76_070_000, 24441)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	fn transfer_to() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `818`
		//  Estimated: `9879`
		// Minimum execution time: 33_402_000 picoseconds.
		Weight::from_parts(34_733_000, 9879)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	/// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	/// Storage: ParachainInfo ParachainId (r:1 w:0)
	/// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Slp DelegatorLedgers (r:1 w:0)
	/// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	/// Storage: VtokenMinting OngoingTimeUnit (r:1 w:0)
	/// Proof: VtokenMinting OngoingTimeUnit (max_values: None, max_size: Some(27), added: 2502, mode: MaxEncodedLen)
	/// Storage: Slp CurrencyDelays (r:1 w:0)
	/// Proof Skipped: Slp CurrencyDelays (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	/// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:0 w:1)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn chill() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1287`
		//  Estimated: `26167`
		// Minimum execution time: 79_577_000 picoseconds.
		Weight::from_parts(82_466_000, 26167)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	/// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp FeeSources (r:1 w:0)
	/// Proof Skipped: Slp FeeSources (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp XcmDestWeightAndFee (r:1 w:0)
	/// Proof Skipped: Slp XcmDestWeightAndFee (max_values: None, max_size: None, mode: Measured)
	fn supplement_fee_reserve() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `980`
		//  Estimated: `13820`
		// Minimum execution time: 38_539_000 picoseconds.
		Weight::from_parts(39_783_000, 13820)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp ValidatorsByDelegatorXcmUpdateQueue (r:1 w:1)
	/// Proof Skipped: Slp ValidatorsByDelegatorXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp ValidatorsByDelegator (r:0 w:1)
	/// Proof Skipped: Slp ValidatorsByDelegator (max_values: None, max_size: None, mode: Measured)
	fn confirm_validators_by_delegator_query_response() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `484`
		//  Estimated: `6402`
		// Minimum execution time: 32_916_000 picoseconds.
		Weight::from_parts(33_801_000, 6402)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Slp OperateOrigins (r:1 w:0)
	/// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	/// Storage: Slp ValidatorsByDelegatorXcmUpdateQueue (r:1 w:1)
	/// Proof Skipped: Slp ValidatorsByDelegatorXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	/// Storage: PolkadotXcm Queries (r:1 w:0)
	/// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn fail_validators_by_delegator_query_response() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `746`
		//  Estimated: `9663`
		// Minimum execution time: 36_302_000 picoseconds.
		Weight::from_parts(37_273_000, 9663)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	fn charge_host_fee_and_tune_vtoken_exchange_rate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `2483`
		// Minimum execution time: 18_539_000 picoseconds.
		Weight::from_parts(19_077_000, 2483)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Slp Validators (r:1 w:1)
	/// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	fn reset_validators() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `357`
		//  Estimated: `2832`
		// Minimum execution time: 23_799_000 picoseconds.
		Weight::from_parts(24_611_000, 2832)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Slp Validators (r:1 w:1)
	/// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	fn set_validator_boost_list() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `357`
		//  Estimated: `2832`
		// Minimum execution time: 23_799_000 picoseconds.
		Weight::from_parts(24_611_000, 2832)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Slp Validators (r:1 w:1)
	/// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	fn add_to_validator_boost_list() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1287`
		//  Estimated: `26167`
		// Minimum execution time: 79_577_000 picoseconds.
		Weight::from_parts(82_466_000, 26167)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: Slp Validators (r:1 w:1)
	/// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	fn remove_from_validator_boot_list() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1287`
		//  Estimated: `26167`
		// Minimum execution time: 79_577_000 picoseconds.
		Weight::from_parts(82_466_000, 26167)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
}
