// This file is part of Bifrost.

// Copyright (C) 2019-2022 Liebi Technologies (UK) Ltd.
// SPDX-License-Identifier: GPL-3.0-or-later WITH Classpath-exception-2.0

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program. If not, see <https://www.gnu.org/licenses/>.
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for bifrost_slp
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-09-14, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `bifrost-jenkins`, CPU: `Intel(R) Xeon(R) CPU E5-26xx v4`
//! WASM-EXECUTION: Compiled, CHAIN: Some("bifrost-kusama-local"), DB CACHE: 1024

// Executed Command:
// target/release/bifrost
// benchmark
// pallet
// --chain=bifrost-kusama-local
// --steps=50
// --repeat=20
// --pallet=bifrost_slp
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./runtime/bifrost-kusama/src/weights/bifrost_slp.rs
// --template=./weight-template/runtime-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions for bifrost_slp.
pub struct BifrostWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> bifrost_slp::WeightInfo for BifrostWeight<T> {
	// Storage: Slp DelegatorNextIndex (r:1 w:1)
	// Proof Skipped: Slp DelegatorNextIndex (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Slp DelegatorsIndex2Multilocation (r:1 w:1)
	// Proof Skipped: Slp DelegatorsIndex2Multilocation (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp DelegatorsMultilocation2Index (r:0 w:1)
	// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	fn initialize_delegator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `166`
		//  Estimated: `3631`
		// Minimum execution time: 66_316 nanoseconds.
		Weight::from_parts(67_556_000, 3631)
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Slp DelegatorLedgers (r:1 w:1)
	// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	// Storage: XcmInterface XcmWeightAndFee (r:1 w:0)
	// Proof Skipped: XcmInterface XcmWeightAndFee (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm Queries (r:0 w:1)
	// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn bond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `629`
		//  Estimated: `4094`
		// Minimum execution time: 104_135 nanoseconds.
		Weight::from_parts(105_944_000, 4094)
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	// Storage: Slp DelegatorLedgers (r:1 w:0)
	// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	// Storage: XcmInterface XcmWeightAndFee (r:1 w:0)
	// Proof Skipped: XcmInterface XcmWeightAndFee (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm Queries (r:0 w:1)
	// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `896`
		//  Estimated: `4361`
		// Minimum execution time: 105_850 nanoseconds.
		Weight::from_parts(109_005_000, 4361)
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Slp DelegatorLedgers (r:1 w:0)
	// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	// Storage: XcmInterface XcmWeightAndFee (r:1 w:0)
	// Proof Skipped: XcmInterface XcmWeightAndFee (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: VtokenMinting OngoingTimeUnit (r:1 w:0)
	// Proof: VtokenMinting OngoingTimeUnit (max_values: None, max_size: Some(27), added: 2502, mode: MaxEncodedLen)
	// Storage: Slp CurrencyDelays (r:1 w:0)
	// Proof Skipped: Slp CurrencyDelays (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm Queries (r:0 w:1)
	// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1028`
		//  Estimated: `4493`
		// Minimum execution time: 128_505 nanoseconds.
		Weight::from_parts(130_525_000, 4493)
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Slp DelegatorLedgers (r:1 w:0)
	// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	// Storage: XcmInterface XcmWeightAndFee (r:1 w:0)
	// Proof Skipped: XcmInterface XcmWeightAndFee (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: VtokenMinting OngoingTimeUnit (r:1 w:0)
	// Proof: VtokenMinting OngoingTimeUnit (max_values: None, max_size: Some(27), added: 2502, mode: MaxEncodedLen)
	// Storage: Slp CurrencyDelays (r:1 w:0)
	// Proof Skipped: Slp CurrencyDelays (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm Queries (r:0 w:1)
	// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn unbond_all() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1006`
		//  Estimated: `4471`
		// Minimum execution time: 120_242 nanoseconds.
		Weight::from_parts(124_199_000, 4471)
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Slp DelegatorLedgers (r:1 w:0)
	// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	// Storage: XcmInterface XcmWeightAndFee (r:1 w:0)
	// Proof Skipped: XcmInterface XcmWeightAndFee (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm Queries (r:0 w:1)
	// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn rebond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `941`
		//  Estimated: `4406`
		// Minimum execution time: 106_179 nanoseconds.
		Weight::from_parts(108_122_000, 4406)
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Slp DelegatorLedgers (r:1 w:0)
	// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp Validators (r:1 w:0)
	// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	// Storage: XcmInterface XcmWeightAndFee (r:1 w:0)
	// Proof Skipped: XcmInterface XcmWeightAndFee (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Slp ValidatorsByDelegatorXcmUpdateQueue (r:0 w:1)
	// Proof Skipped: Slp ValidatorsByDelegatorXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm Queries (r:0 w:1)
	// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn delegate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `963`
		//  Estimated: `4428`
		// Minimum execution time: 120_559 nanoseconds.
		Weight::from_parts(123_430_000, 4428)
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Slp DelegatorLedgers (r:1 w:0)
	// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp ValidatorsByDelegator (r:1 w:0)
	// Proof Skipped: Slp ValidatorsByDelegator (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	// Storage: XcmInterface XcmWeightAndFee (r:1 w:0)
	// Proof Skipped: XcmInterface XcmWeightAndFee (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Slp ValidatorsByDelegatorXcmUpdateQueue (r:0 w:1)
	// Proof Skipped: Slp ValidatorsByDelegatorXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm Queries (r:0 w:1)
	// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn undelegate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1031`
		//  Estimated: `4496`
		// Minimum execution time: 111_483 nanoseconds.
		Weight::from_parts(113_771_000, 4496)
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Slp DelegatorLedgers (r:1 w:0)
	// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp Validators (r:1 w:0)
	// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	// Storage: XcmInterface XcmWeightAndFee (r:1 w:0)
	// Proof Skipped: XcmInterface XcmWeightAndFee (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Slp ValidatorsByDelegatorXcmUpdateQueue (r:0 w:1)
	// Proof Skipped: Slp ValidatorsByDelegatorXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm Queries (r:0 w:1)
	// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn redelegate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `963`
		//  Estimated: `4428`
		// Minimum execution time: 121_646 nanoseconds.
		Weight::from_parts(123_838_000, 4428)
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	// Storage: XcmInterface XcmWeightAndFee (r:1 w:0)
	// Proof Skipped: XcmInterface XcmWeightAndFee (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	fn payout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `367`
		//  Estimated: `3832`
		// Minimum execution time: 61_226 nanoseconds.
		Weight::from_parts(62_259_000, 3832)
			.saturating_add(T::DbWeight::get().reads(3))
	}
	// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: XcmInterface XcmWeightAndFee (r:1 w:0)
	// Proof Skipped: XcmInterface XcmWeightAndFee (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: VtokenMinting OngoingTimeUnit (r:1 w:0)
	// Proof: VtokenMinting OngoingTimeUnit (max_values: None, max_size: Some(27), added: 2502, mode: MaxEncodedLen)
	// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm Queries (r:0 w:1)
	// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn liquidize() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `612`
		//  Estimated: `4077`
		// Minimum execution time: 98_187 nanoseconds.
		Weight::from_parts(100_637_000, 4077)
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: XcmInterface XcmWeightAndFee (r:1 w:0)
	// Proof Skipped: XcmInterface XcmWeightAndFee (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: Slp DelegatorLedgers (r:1 w:0)
	// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	// Storage: VtokenMinting OngoingTimeUnit (r:1 w:0)
	// Proof: VtokenMinting OngoingTimeUnit (max_values: None, max_size: Some(27), added: 2502, mode: MaxEncodedLen)
	// Storage: Slp CurrencyDelays (r:1 w:0)
	// Proof Skipped: Slp CurrencyDelays (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:0 w:1)
	// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm Queries (r:0 w:1)
	// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn chill() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1006`
		//  Estimated: `4471`
		// Minimum execution time: 127_921 nanoseconds.
		Weight::from_parts(129_570_000, 4471)
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: XcmInterface XcmWeightAndFee (r:1 w:0)
	// Proof Skipped: XcmInterface XcmWeightAndFee (max_values: None, max_size: None, mode: Measured)
	fn transfer_back() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `401`
		//  Estimated: `3866`
		// Minimum execution time: 74_216 nanoseconds.
		Weight::from_parts(75_781_000, 3866)
			.saturating_add(T::DbWeight::get().reads(3))
	}
	// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	// Storage: XcmInterface XcmWeightAndFee (r:1 w:0)
	// Proof Skipped: XcmInterface XcmWeightAndFee (max_values: None, max_size: None, mode: Measured)
	fn transfer_to() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `298`
		//  Estimated: `3763`
		// Minimum execution time: 55_326 nanoseconds.
		Weight::from_parts(57_260_000, 3763)
			.saturating_add(T::DbWeight::get().reads(2))
	}
	// Storage: Slp DelegatorLedgers (r:1 w:0)
	// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm QueryCounter (r:1 w:1)
	// Proof Skipped: PolkadotXcm QueryCounter (max_values: Some(1), max_size: None, mode: Measured)
	// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	// Storage: XcmInterface XcmWeightAndFee (r:1 w:0)
	// Proof Skipped: XcmInterface XcmWeightAndFee (max_values: None, max_size: None, mode: Measured)
	// Storage: ParachainInfo ParachainId (r:1 w:0)
	// Proof: ParachainInfo ParachainId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	// Storage: PolkadotXcm Queries (r:0 w:1)
	// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn convert_asset() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `697`
		//  Estimated: `4162`
		// Minimum execution time: 87_626 nanoseconds.
		Weight::from_parts(89_702_000, 4162)
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: VtokenMinting TokenPool (r:1 w:1)
	// Proof: VtokenMinting TokenPool (max_values: None, max_size: Some(38), added: 2513, mode: MaxEncodedLen)
	fn increase_token_pool() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `180`
		//  Estimated: `3503`
		// Minimum execution time: 30_773 nanoseconds.
		Weight::from_parts(31_754_000, 3503)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: VtokenMinting TokenPool (r:1 w:1)
	// Proof: VtokenMinting TokenPool (max_values: None, max_size: Some(38), added: 2513, mode: MaxEncodedLen)
	fn decrease_token_pool() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `230`
		//  Estimated: `3503`
		// Minimum execution time: 33_009 nanoseconds.
		Weight::from_parts(33_510_000, 3503)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Slp OngoingTimeUnitUpdateInterval (r:1 w:0)
	// Proof Skipped: Slp OngoingTimeUnitUpdateInterval (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp LastTimeUpdatedOngoingTimeUnit (r:1 w:1)
	// Proof Skipped: Slp LastTimeUpdatedOngoingTimeUnit (max_values: None, max_size: None, mode: Measured)
	// Storage: VtokenMinting OngoingTimeUnit (r:1 w:1)
	// Proof: VtokenMinting OngoingTimeUnit (max_values: None, max_size: Some(27), added: 2502, mode: MaxEncodedLen)
	fn update_ongoing_time_unit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `277`
		//  Estimated: `3742`
		// Minimum execution time: 55_617 nanoseconds.
		Weight::from_parts(56_576_000, 3742)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Tokens Accounts (r:2 w:2)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	// Storage: VtokenMinting OngoingTimeUnit (r:1 w:0)
	// Proof: VtokenMinting OngoingTimeUnit (max_values: None, max_size: Some(27), added: 2502, mode: MaxEncodedLen)
	// Storage: VtokenMinting TimeUnitUnlockLedger (r:1 w:0)
	// Proof: VtokenMinting TimeUnitUnlockLedger (max_values: None, max_size: Some(282), added: 2757, mode: MaxEncodedLen)
	// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	// Storage: System Account (r:2 w:2)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn refund_currency_due_unbond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1897`
		//  Estimated: `6196`
		// Minimum execution time: 157_504 nanoseconds.
		Weight::from_parts(160_216_000, 6196)
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp FeeSources (r:1 w:0)
	// Proof Skipped: Slp FeeSources (max_values: None, max_size: None, mode: Measured)
	// Storage: XcmInterface XcmWeightAndFee (r:1 w:0)
	// Proof Skipped: XcmInterface XcmWeightAndFee (max_values: None, max_size: None, mode: Measured)
	fn supplement_fee_reserve() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `391`
		//  Estimated: `3856`
		// Minimum execution time: 62_010 nanoseconds.
		Weight::from_parts(63_508_000, 3856)
			.saturating_add(T::DbWeight::get().reads(3))
	}
	// Storage: Slp CurrencyTuneExchangeRateLimit (r:1 w:0)
	// Proof Skipped: Slp CurrencyTuneExchangeRateLimit (max_values: None, max_size: None, mode: Measured)
	// Storage: VtokenMinting TokenPool (r:1 w:1)
	// Proof: VtokenMinting TokenPool (max_values: None, max_size: Some(38), added: 2513, mode: MaxEncodedLen)
	// Storage: VtokenMinting OngoingTimeUnit (r:1 w:0)
	// Proof: VtokenMinting OngoingTimeUnit (max_values: None, max_size: Some(27), added: 2502, mode: MaxEncodedLen)
	// Storage: Slp CurrencyLatestTuneRecord (r:1 w:1)
	// Proof Skipped: Slp CurrencyLatestTuneRecord (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp HostingFees (r:1 w:0)
	// Proof Skipped: Slp HostingFees (max_values: None, max_size: None, mode: Measured)
	// Storage: Tokens TotalIssuance (r:1 w:1)
	// Proof: Tokens TotalIssuance (max_values: None, max_size: Some(38), added: 2513, mode: MaxEncodedLen)
	// Storage: Tokens Accounts (r:1 w:1)
	// Proof: Tokens Accounts (max_values: None, max_size: Some(118), added: 2593, mode: MaxEncodedLen)
	// Storage: AssetRegistry CurrencyMetadatas (r:1 w:0)
	// Proof Skipped: AssetRegistry CurrencyMetadatas (max_values: None, max_size: None, mode: Measured)
	// Storage: System Account (r:1 w:1)
	// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	// Storage: Slp DelegatorsMultilocation2Index (r:1 w:0)
	// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp DelegatorLatestTuneRecord (r:1 w:1)
	// Proof Skipped: Slp DelegatorLatestTuneRecord (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp DelegatorLedgers (r:1 w:1)
	// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	fn charge_host_fee_and_tune_vtoken_exchange_rate() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2097`
		//  Estimated: `5562`
		// Minimum execution time: 215_456 nanoseconds.
		Weight::from_parts(221_225_000, 5562)
			.saturating_add(T::DbWeight::get().reads(12))
			.saturating_add(T::DbWeight::get().writes(7))
	}
	// Storage: Slp OperateOrigins (r:1 w:1)
	// Proof Skipped: Slp OperateOrigins (max_values: None, max_size: None, mode: Measured)
	fn set_operate_origin() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `3469`
		// Minimum execution time: 29_641 nanoseconds.
		Weight::from_parts(31_358_000, 3469)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Slp FeeSources (r:1 w:1)
	// Proof Skipped: Slp FeeSources (max_values: None, max_size: None, mode: Measured)
	fn set_fee_source() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `3469`
		// Minimum execution time: 28_008 nanoseconds.
		Weight::from_parts(33_202_000, 3469)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Slp DelegatorsIndex2Multilocation (r:1 w:1)
	// Proof Skipped: Slp DelegatorsIndex2Multilocation (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp DelegatorNextIndex (r:1 w:0)
	// Proof Skipped: Slp DelegatorNextIndex (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp DelegatorsMultilocation2Index (r:0 w:1)
	// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	fn add_delegator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `63`
		//  Estimated: `3528`
		// Minimum execution time: 51_783 nanoseconds.
		Weight::from_parts(53_173_000, 3528)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Slp DelegatorLedgers (r:1 w:1)
	// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp DelegatorsMultilocation2Index (r:1 w:1)
	// Proof Skipped: Slp DelegatorsMultilocation2Index (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp DelegatorsIndex2Multilocation (r:0 w:1)
	// Proof Skipped: Slp DelegatorsIndex2Multilocation (max_values: None, max_size: None, mode: Measured)
	fn remove_delegator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `340`
		//  Estimated: `3805`
		// Minimum execution time: 61_870 nanoseconds.
		Weight::from_parts(64_474_000, 3805)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Slp Validators (r:1 w:1)
	// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	fn add_validator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `63`
		//  Estimated: `3528`
		// Minimum execution time: 40_832 nanoseconds.
		Weight::from_parts(41_891_000, 3528)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Slp Validators (r:1 w:1)
	// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	fn remove_validator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `120`
		//  Estimated: `3585`
		// Minimum execution time: 40_957 nanoseconds.
		Weight::from_parts(42_157_000, 3585)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp DelegatorLedgers (r:1 w:0)
	// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp Validators (r:1 w:0)
	// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp ValidatorsByDelegator (r:0 w:1)
	// Proof Skipped: Slp ValidatorsByDelegator (max_values: None, max_size: None, mode: Measured)
	fn set_validators_by_delegator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `331`
		//  Estimated: `3796`
		// Minimum execution time: 61_606 nanoseconds.
		Weight::from_parts(62_459_000, 3796)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Slp DelegatorLedgers (r:1 w:1)
	// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	fn set_delegator_ledger() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `242`
		//  Estimated: `3707`
		// Minimum execution time: 45_286 nanoseconds.
		Weight::from_parts(46_262_000, 3707)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Slp MinimumsAndMaximums (r:1 w:1)
	// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	fn set_minimums_and_maximums() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `3469`
		// Minimum execution time: 31_060 nanoseconds.
		Weight::from_parts(32_075_000, 3469)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Slp CurrencyDelays (r:1 w:1)
	// Proof Skipped: Slp CurrencyDelays (max_values: None, max_size: None, mode: Measured)
	fn set_currency_delays() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `3469`
		// Minimum execution time: 26_703 nanoseconds.
		Weight::from_parts(30_485_000, 3469)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Slp HostingFees (r:1 w:1)
	// Proof Skipped: Slp HostingFees (max_values: None, max_size: None, mode: Measured)
	fn set_hosting_fees() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `3469`
		// Minimum execution time: 31_853 nanoseconds.
		Weight::from_parts(33_036_000, 3469)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Slp CurrencyTuneExchangeRateLimit (r:1 w:1)
	// Proof Skipped: Slp CurrencyTuneExchangeRateLimit (max_values: None, max_size: None, mode: Measured)
	fn set_currency_tune_exchange_rate_limit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `3469`
		// Minimum execution time: 29_121 nanoseconds.
		Weight::from_parts(30_332_000, 3469)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Slp OngoingTimeUnitUpdateInterval (r:1 w:1)
	// Proof Skipped: Slp OngoingTimeUnitUpdateInterval (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp LastTimeUpdatedOngoingTimeUnit (r:0 w:1)
	// Proof Skipped: Slp LastTimeUpdatedOngoingTimeUnit (max_values: None, max_size: None, mode: Measured)
	fn set_ongoing_time_unit_update_interval() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `3469`
		// Minimum execution time: 31_333 nanoseconds.
		Weight::from_parts(36_804_000, 3469)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Slp SupplementFeeAccountWhitelist (r:1 w:1)
	// Proof Skipped: Slp SupplementFeeAccountWhitelist (max_values: None, max_size: None, mode: Measured)
	fn add_supplement_fee_account_to_whitelist() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `4`
		//  Estimated: `3469`
		// Minimum execution time: 37_467 nanoseconds.
		Weight::from_parts(38_636_000, 3469)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Slp SupplementFeeAccountWhitelist (r:1 w:1)
	// Proof Skipped: Slp SupplementFeeAccountWhitelist (max_values: None, max_size: None, mode: Measured)
	fn remove_supplement_fee_account_from_whitelist() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `119`
		//  Estimated: `3584`
		// Minimum execution time: 41_910 nanoseconds.
		Weight::from_parts(42_858_000, 3584)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:1 w:1)
	// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp DelegatorLedgers (r:1 w:1)
	// Proof Skipped: Slp DelegatorLedgers (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm Queries (r:1 w:0)
	// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn confirm_delegator_ledger_query_response() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `597`
		//  Estimated: `4062`
		// Minimum execution time: 73_648 nanoseconds.
		Weight::from_parts(74_976_000, 4062)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Slp DelegatorLedgerXcmUpdateQueue (r:1 w:1)
	// Proof Skipped: Slp DelegatorLedgerXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm Queries (r:1 w:0)
	// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn fail_delegator_ledger_query_response() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `496`
		//  Estimated: `3961`
		// Minimum execution time: 52_423 nanoseconds.
		Weight::from_parts(53_428_000, 3961)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Slp ValidatorsByDelegatorXcmUpdateQueue (r:1 w:1)
	// Proof Skipped: Slp ValidatorsByDelegatorXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp ValidatorsByDelegator (r:0 w:1)
	// Proof Skipped: Slp ValidatorsByDelegator (max_values: None, max_size: None, mode: Measured)
	fn confirm_validators_by_delegator_query_response() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `229`
		//  Estimated: `3694`
		// Minimum execution time: 47_808 nanoseconds.
		Weight::from_parts(48_657_000, 3694)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Slp ValidatorsByDelegatorXcmUpdateQueue (r:1 w:1)
	// Proof Skipped: Slp ValidatorsByDelegatorXcmUpdateQueue (max_values: None, max_size: None, mode: Measured)
	// Storage: PolkadotXcm Queries (r:1 w:0)
	// Proof Skipped: PolkadotXcm Queries (max_values: None, max_size: None, mode: Measured)
	fn fail_validators_by_delegator_query_response() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `561`
		//  Estimated: `4026`
		// Minimum execution time: 54_224 nanoseconds.
		Weight::from_parts(55_128_000, 4026)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp Validators (r:0 w:1)
	// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	fn reset_validators() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `63`
		//  Estimated: `3528`
		// Minimum execution time: 36_205 nanoseconds.
		Weight::from_parts(39_311_000, 3528)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Slp MinimumsAndMaximums (r:1 w:0)
	// Proof Skipped: Slp MinimumsAndMaximums (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp Validators (r:1 w:1)
	// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp ValidatorBoostList (r:0 w:1)
	// Proof Skipped: Slp ValidatorBoostList (max_values: None, max_size: None, mode: Measured)
	fn set_validator_boost_list() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `63`
		//  Estimated: `3528`
		// Minimum execution time: 60_318 nanoseconds.
		Weight::from_parts(61_929_000, 3528)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Slp ValidatorBoostList (r:1 w:1)
	// Proof Skipped: Slp ValidatorBoostList (max_values: None, max_size: None, mode: Measured)
	// Storage: Slp Validators (r:1 w:1)
	// Proof Skipped: Slp Validators (max_values: None, max_size: None, mode: Measured)
	fn add_to_validator_boost_list() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `3507`
		// Minimum execution time: 53_855 nanoseconds.
		Weight::from_parts(56_070_000, 3507)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Slp ValidatorBoostList (r:1 w:1)
	// Proof Skipped: Slp ValidatorBoostList (max_values: None, max_size: None, mode: Measured)
	fn remove_from_validator_boot_list() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `161`
		//  Estimated: `3626`
		// Minimum execution time: 37_202 nanoseconds.
		Weight::from_parts(37_957_000, 3626)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
