// This file is part of Bifrost.

// Copyright (C) 2019-2021 Liebi Technologies (UK) Ltd.
// SPDX-License-Identifier: GPL-3.0-or-later WITH Classpath-exception-2.0

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for bifrost_flexible_fee
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
<<<<<<< HEAD
//! DATE: 2021-08-10, STEPS: `[50, ]`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
=======
//! DATE: 2021-08-09, STEPS: `[50, ]`, REPEAT: 1, LOW RANGE: `[]`, HIGH RANGE: `[]`
>>>>>>> a1878244959b9f2b058a0acc4280d33c04b221a1
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("asgard-local"), DB CACHE: 128

// Executed Command:
// target/release/bifrost
// benchmark
// --chain=asgard-local
// --steps=50
<<<<<<< HEAD
// --repeat=20
=======
// --repeat=1
>>>>>>> a1878244959b9f2b058a0acc4280d33c04b221a1
// --pallet=bifrost_flexible_fee
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --header=./HEADER-GPL3
// --output=./runtime/asgard/src/weights/bifrost_flexible_fee.rs


#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for bifrost_flexible_fee.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> bifrost_flexible_fee::WeightInfo for WeightInfo<T> {
	fn set_user_fee_charge_order() -> Weight {
<<<<<<< HEAD
		(6_202_000 as Weight)
=======
		(6_662_000 as Weight)
>>>>>>> a1878244959b9f2b058a0acc4280d33c04b221a1
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
